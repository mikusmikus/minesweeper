{"version":3,"sources":["components/header/header.module.scss","components/options/options.module.scss","components/results/results.module.scss","components/winner/winner.module.scss","components/oneCell/oneCell.module.scss","components/gameOver/gameOver.module.scss","components/minesweeper/minesweeper.module.scss","components/oneCell/oneCell.tsx","components/options/options.tsx","components/header/header.tsx","components/results/results.tsx","components/gameOver/gameOver.tsx","components/winner/winner.tsx","helpers/optionArrays.tsx","helpers/helperFunctions.tsx","components/minesweeper/minesweeper.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","OneCell","oneCell","handleOpen","hadleRightClick","gridSize","isGridDisabled","isOpen","haveFlag","cell","cellStyle","flexBasis","paddingTop","className","style","cellOpen","onContextMenu","e","preventDefault","cellOpenText","image","src","alt","type","cellClose","flag","onClick","disabled","Options","gameSize","gameDifficulty","gameSizeArr","gameDifficultyArr","handleGridSizeChange","handleDifficultyChange","options","htmlFor","label","id","name","value","onChange","select","map","size","option","difficulty","Header","firstMoveDone","showResults","isGameStarted","handleShowResults","handleStart","handleRestart","header","button","triangle","triangleButton","startFinish","Results","winners","results","active","heading","table","tableTh","index","time","tableTr","substring","GameOver","gameOver","gameOverGG","gameOverText","Winner","winnerName","handleWinnerName","handleWinner","inputEl","useRef","useEffect","current","focus","inputWrapper","placeholder","input","ref","GAME_SIZE","GAME_DIFICULTY","drawGrid","gridArr","gridArr2d","i","j","push","countNumber","gridCopy","rowI","colI","count","Math","max","min","adjacentCellsNoBombs","grid","isGameOver","isWinner","Minesweeper","useState","setGridSize","setDifficulty","setGrid","setShowResults","setWinnerName","setWinners","minesweeperStorage","localStorage","getItem","JSON","parse","copyGrid","cloneDeep","gameOverGrid","drawGameOver","gridAdjacent","some","array","item","checkWinner","gridWithBombs","bombCount","forEach","arr","randomNumber","random","randomCells","sampleSize","drawBombs","round","gridEmtptyFirst","drawAroundFirstClicked","gridWithNumber","drawNumbers","parseInt","target","minesweeper","maxWidth","RowArr","index1","index2","copyWinners","newWinner","uuidv4","setItem","stringify","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0601258b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__16fGl\",\"button\":\"header_button__3EYHo\",\"startFinish\":\"header_startFinish__1xrhN\",\"triangle\":\"header_triangle__q_44v\",\"triangleButton\":\"header_triangleButton__27PwV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"options\":\"options_options__1p9M2\",\"label\":\"options_label__2_Fyj\",\"select\":\"options_select__2lHFD\",\"option\":\"options_option__2jmWP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"results\":\"results_results__1g5GR\",\"active\":\"results_active__2P_qz\",\"table\":\"results_table__2yg4S\",\"tableTh\":\"results_tableTh__1RguN\",\"tableTr\":\"results_tableTr__3-ojH\",\"heading\":\"results_heading__2xJkZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Winner\":\"winner_Winner__3pJ0r\",\"heading\":\"winner_heading__1ufod\",\"winner\":\"winner_winner__1ZYIX\",\"label\":\"winner_label__3Nyd-\",\"inputWrapper\":\"winner_inputWrapper__Q6WtU\",\"input\":\"winner_input__3jViK\",\"button\":\"winner_button__3yynH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cellClose\":\"oneCell_cellClose__m61gg\",\"cellOpen\":\"oneCell_cellOpen__KyVHc\",\"cellOpenText\":\"oneCell_cellOpenText__2ZdKl\",\"image\":\"oneCell_image__35Ksa\",\"flag\":\"oneCell_flag__3MvgE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameOver\":\"gameOver_gameOver__1XsNv\",\"gameOverText\":\"gameOver_gameOverText__2vaA9\",\"gameOverGG\":\"gameOver_gameOverGG__2hiM8\",\"gg\":\"gameOver_gg__3-fLQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"minesweeper\":\"minesweeper_minesweeper__33qms\"};","/* eslint-disable max-len */\r\nimport React, { FC } from 'react';\r\nimport style from './oneCell.module.scss';\r\nimport type { Grid } from '../../helpers/helperFunctions';\r\n\r\ntype Props = {\r\n  oneCell: Grid;\r\n  hadleRightClick: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\r\n  handleOpen: () => void;\r\n  isGridDisabled: boolean;\r\n  gridSize: number;\r\n};\r\n\r\nconst OneCell: FC<Props> = ({ oneCell, handleOpen, hadleRightClick, gridSize, isGridDisabled }) => {\r\n  const { isOpen, haveFlag, cell } = oneCell;\r\n\r\n  const cellStyle = {\r\n    flexBasis: `${100 / gridSize}%`,\r\n    paddingTop: `${100 / gridSize}%`,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isOpen ? (\r\n        <div className={style.cellOpen} onContextMenu={(e) => e.preventDefault()} style={cellStyle}>\r\n          <span className={style.cellOpenText}>\r\n            {cell > 0 && cell}\r\n            {cell === 'bomb' && (\r\n              <img\r\n                className={style.image}\r\n                src=\"https://w7.pngwing.com/pngs/220/369/png-transparent-minesweeper-pro-classic-mine-sweeper-minesweeper-plus-likeminesweeper-bomb-game-computer-wallpaper-video-game.png\"\r\n                alt=\"bomb\"\r\n              />\r\n            )}\r\n          </span>\r\n        </div>\r\n      ) : (\r\n        <button\r\n          type=\"button\"\r\n          className={`${style.cellClose} ${haveFlag && style.flag}`}\r\n          style={cellStyle}\r\n          onClick={handleOpen}\r\n          disabled={isGridDisabled}\r\n          onContextMenu={(e) => hadleRightClick(e)}\r\n        >\r\n          {' '}\r\n          {/* {isOpen && cell > 0 && cell} */}\r\n        </button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OneCell;\r\n","import React, { FC } from 'react';\r\nimport style from './options.module.scss';\r\nimport type {GameSize, GameDifficulty} from '../../helpers/optionArrays';\r\n\r\ntype Props = {\r\n  gameSize: number;\r\n  gameDifficulty: number;\r\n  gameSizeArr: GameSize[]\r\n  gameDifficultyArr: GameDifficulty[]\r\n  handleGridSizeChange: (e: React.ChangeEvent<HTMLSelectElement>) => void;\r\n  handleDifficultyChange: (e: React.ChangeEvent<HTMLSelectElement>) => void;\r\n};\r\n\r\nconst Options: FC<Props> = ({\r\n  gameSize,\r\n  gameDifficulty,\r\n  gameSizeArr,\r\n  gameDifficultyArr,\r\n  handleGridSizeChange,\r\n  handleDifficultyChange,\r\n}) => {\r\n  return (\r\n    <div className={style.options}>\r\n      <label htmlFor=\"gameSize\" className={style.label}>\r\n        Choose game size{' '}\r\n        <select\r\n          id=\"gameSize\"\r\n          name=\"gameSize\"\r\n          value={gameSize}\r\n          onChange={handleGridSizeChange}\r\n          className={style.select}\r\n        >\r\n          {gameSizeArr.map(({ name, size }) => (\r\n            <option key={name} value={size} className={style.option}>\r\n              {name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </label>\r\n      <label htmlFor=\"difficulty\" className={style.label}>\r\n        Choose difficulty{' '}\r\n        <select\r\n          id=\"difficulty\"\r\n          name=\"difficulty\"\r\n          value={gameDifficulty}\r\n          onChange={handleDifficultyChange}\r\n          className={style.select}\r\n        >\r\n          {gameDifficultyArr.map(({ name, difficulty }) => (\r\n            <option key={name} value={difficulty} className={style.option}>\r\n              {name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Options;\r\n","import React, { FC } from 'react';\r\nimport style from './header.module.scss';\r\nimport Options from '../options/options';\r\nimport type { GameSize, GameDifficulty } from '../../helpers/optionArrays';\r\n\r\ntype Props = {\r\n  isGameStarted: boolean;\r\n  firstMoveDone: boolean;\r\n  showResults: boolean;\r\n  gameSize: number;\r\n  gameDifficulty: number;\r\n  gameSizeArr: GameSize[];\r\n  gameDifficultyArr: GameDifficulty[];\r\n  handleShowResults: () => void;\r\n  handleStart: () => void;\r\n  handleRestart: () => void;\r\n  handleGridSizeChange: (e: React.ChangeEvent<HTMLSelectElement>) => void;\r\n  handleDifficultyChange: (e: React.ChangeEvent<HTMLSelectElement>) => void;\r\n};\r\n\r\nconst Header: FC<Props> = ({\r\n  firstMoveDone,\r\n  showResults,\r\n  gameSizeArr,\r\n  gameSize,\r\n  gameDifficulty,\r\n  isGameStarted,\r\n  gameDifficultyArr,\r\n  handleShowResults,\r\n  handleStart,\r\n  handleRestart,\r\n  handleGridSizeChange,\r\n  handleDifficultyChange,\r\n}) => {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className={style.header}>\r\n        {!isGameStarted ? (\r\n          <>\r\n            <div className=\"col-xs-3\">\r\n              <div className={style.startFinish}>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={handleStart}\r\n                  className={style.button}\r\n                  disabled={showResults}\r\n                >\r\n                  Start\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-xs-9\">\r\n              <Options\r\n                gameSize={gameSize}\r\n                gameDifficulty={gameDifficulty}\r\n                handleGridSizeChange={handleGridSizeChange}\r\n                handleDifficultyChange={handleDifficultyChange}\r\n                gameSizeArr={gameSizeArr}\r\n                gameDifficultyArr={gameDifficultyArr}\r\n              />\r\n            </div>\r\n            <span className={style.triangle}>\r\n              <button type=\"button\" onClick={handleShowResults} className={style.triangleButton}>\r\n                {showResults ? 'close' : 'results'}\r\n              </button>\r\n            </span>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"col-xs-3\">\r\n              <button type=\"button\" onClick={handleStart} className={style.button}>\r\n                END\r\n              </button>\r\n            </div>\r\n            <div className=\"col-xs-6\">count / time</div>\r\n            {firstMoveDone && (\r\n              <span className={style.triangle}>\r\n                <button type=\"button\" onClick={handleRestart} className={style.triangleButton}>\r\n                  restart\r\n                </button>\r\n              </span>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { FC } from 'react';\r\nimport style from './results.module.scss';\r\nimport type { typeWinner } from '../../helpers/types';\r\n\r\ntype Props = {\r\n  showResults: boolean;\r\n  winners: typeWinner[];\r\n};\r\n\r\nconst Results: FC<Props> = ({ showResults, winners }) => {\r\n  return (\r\n    <div className={`${style.results} ${showResults && style.active}`}>\r\n      <h5 className={style.heading}>Results</h5>\r\n      <table className={style.table}>\r\n        <thead>\r\n          <tr className={style.tableTh}>\r\n            <th>#</th>\r\n            <th>name</th>\r\n            <th>time</th>\r\n            <th>size</th>\r\n            <th>difficulty</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {winners.map(({ id, name, time, size, difficulty }, index) => (\r\n            <tr key={id} className={style.tableTr}>\r\n              <td>{index + 1}</td>\r\n              <td>{name.substring(0, 12)}</td>\r\n              <td>{time}</td>\r\n              <td>{size}</td>\r\n              <td>{difficulty}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Results;\r\n","import React from 'react';\r\nimport style from './gameOver.module.scss';\r\n\r\nconst GameOver = () => {\r\n  return (\r\n    <div className={style.gameOver}>\r\n      <span className={style.gameOverGG}> GG</span>\r\n      <span className={style.gameOverText}>better luck next time</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameOver;\r\n","import React, { FC, useEffect, useRef } from 'react';\r\nimport style from './winner.module.scss';\r\n\r\ntype Props = {\r\n  winnerName:string;\r\n  handleWinnerName: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  handleWinner:() => void\r\n};\r\n\r\nconst Winner: FC<Props> = ({ winnerName, handleWinnerName, handleWinner }) => {\r\n  const inputEl = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // @ts-ignore\r\n    inputEl.current.focus();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={style.Winner}>\r\n      <h1 className={style.heading}> Winner!!!</h1>\r\n      <label htmlFor=\"input\" className={style.label}>\r\n        enter your name to save results\r\n        <div className={style.inputWrapper}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"enter name...\"\r\n            className={style.input}\r\n            ref={inputEl}\r\n            value={winnerName}\r\n            onChange={(e) => handleWinnerName(e)}\r\n          />\r\n          <button type=\"button\" className={style.button} onClick={handleWinner}>\r\n            save\r\n          </button>\r\n        </div>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Winner;\r\n","export type GameSize = {\r\n  name: string;\r\n  size: number;\r\n};\r\nexport type GameDifficulty = {\r\n  name: string;\r\n  difficulty: number;\r\n};\r\n\r\nexport const GAME_SIZE: GameSize[] = [\r\n  { name: ' small', size: 10 },\r\n  { name: 'medium', size: 15 },\r\n  { name: 'large', size: 20 },\r\n];\r\n\r\nexport const GAME_DIFICULTY: GameDifficulty[] = [\r\n  { name: 'easy', difficulty: 10 },\r\n  { name: 'medium', difficulty: 3 },\r\n  { name: 'hard', difficulty: 2 },\r\n];\r\n","/* eslint-disable max-len */\r\n/* eslint-disable import/no-cycle */\r\nimport { cloneDeep, random, sampleSize } from 'lodash';\r\n\r\nexport type Cell = { rowI: number; colI: number };\r\nexport type CellText = 'bomb' | 'empty' | number;\r\nexport type Grid = { id: number; cell: CellText; isOpen: boolean; haveFlag: boolean };\r\n\r\nexport const drawGrid = (size: number) => {\r\n  let gridArr: Grid[] = [];\r\n  const gridArr2d: Grid[][] = [];\r\n  let id = 1;\r\n  for (let i = 0; i < size; i++) {\r\n    for (let j = 0; j < size; j++) {\r\n      gridArr.push({ id, cell: 0, isOpen: false, haveFlag: false });\r\n      id += 1;\r\n    }\r\n    gridArr2d.push(gridArr);\r\n    gridArr = [];\r\n  }\r\n  return gridArr2d;\r\n};\r\n\r\nexport const drawBombs = (cell: Cell, bombCount: number, grid: Grid[][]): Grid[][] => {\r\n  const gridCopy = cloneDeep(grid);\r\n  gridCopy.forEach((arr) => {\r\n    const randomNumber = random(1, bombCount);\r\n    const randomCells = sampleSize(arr, randomNumber);\r\n    for (let i = 0; i < randomNumber; i++) {\r\n      randomCells[i].cell = 'bomb';\r\n    }\r\n  });\r\n  gridCopy[cell.rowI][cell.colI].cell = 0;\r\n  return gridCopy;\r\n};\r\n\r\nexport const drawAroundFirstClicked = (cell: Cell, size: number, grid: Grid[][]): Grid[][] => {\r\n  const gridCopy = cloneDeep(grid);\r\n  const { rowI, colI } = cell;\r\n  for (let i = Math.max(rowI - 1, 0); i <= Math.min(rowI + 1, size - 1); i++) {\r\n    for (let j = Math.max(colI - 1, 0); j <= Math.min(colI + 1, size - 1); j++) {\r\n      if (gridCopy[i][j].cell === 'bomb') {\r\n        gridCopy[i][j].cell = 0;\r\n      }\r\n    }\r\n  }\r\n  return gridCopy;\r\n};\r\n\r\nexport const drawNumbers = (size: number, grid: Grid[][]): Grid[][] => {\r\n  const gridCopy = cloneDeep(grid);\r\n  for (let i = 0; i < size; i++) {\r\n    for (let j = 0; j < size; j++) {\r\n      if (gridCopy[i][j].cell === 0) {\r\n        const cell = { rowI: i, colI: j };\r\n        const count = countNumber(cell, size, gridCopy);\r\n        if (count === 0) {\r\n          gridCopy[i][j].cell = 'empty';\r\n        } else {\r\n          gridCopy[i][j].cell = count;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return gridCopy;\r\n};\r\n\r\nconst countNumber = (cell: Cell, size: number, gridCopy: Grid[][]): number => {\r\n  const { rowI, colI } = cell;\r\n  let count = 0;\r\n  for (let i = Math.max(rowI - 1, 0); i <= Math.min(rowI + 1, size - 1); i++) {\r\n    for (let j = Math.max(colI - 1, 0); j <= Math.min(colI + 1, size - 1); j++) {\r\n      if (gridCopy[i][j].cell === 'bomb') count += 1;\r\n    }\r\n  }\r\n  return count;\r\n};\r\n\r\nexport const adjacentCellsNoBombs = (cell: Cell, size: number, grid: Grid[][]): Grid[][] => {\r\n  const { rowI, colI } = cell;\r\n  const gridCopy = [...grid];\r\n  const count = countNumber(cell, size, gridCopy);\r\n  gridCopy[rowI][colI].isOpen = true;\r\n\r\n  if (count === 0) {\r\n    for (let i = Math.max(rowI - 1, 0); i <= Math.min(rowI + 1, size - 1); i++) {\r\n      for (let j = Math.max(colI - 1, 0); j <= Math.min(colI + 1, size - 1); j++) {\r\n        if (gridCopy[i][j].cell !== 'bomb' && gridCopy[i][j].isOpen === false) {\r\n          adjacentCellsNoBombs({ rowI: i, colI: j }, size, gridCopy);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return gridCopy;\r\n};\r\n\r\nexport const drawGameOver = (size: number, grid: Grid[][]): Grid[][] => {\r\n  const gridCopy = cloneDeep(grid);\r\n  for (let i = 0; i < size; i++) {\r\n    for (let j = 0; j < size; j++) {\r\n      if (gridCopy[i][j].cell === 'bomb') {\r\n        gridCopy[i][j].isOpen = true;\r\n      }\r\n    }\r\n  }\r\n  return gridCopy;\r\n};\r\n\r\nexport const checkWinner = (size: number, grid: Grid[][]): boolean => {\r\n  \r\n  return !grid.some((array) =>\r\n    array.some((item) => {\r\n      return (item.cell !== 'bomb' && !item.isOpen);\r\n    })\r\n  );\r\n\r\n\r\n};\r\n","/* eslint-disable max-len */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { cloneDeep, round } from 'lodash';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport OneCell from '../oneCell/oneCell';\r\nimport Header from '../header/header';\r\nimport Results from '../results/results';\r\nimport GameOver from '../gameOver/gameOver';\r\nimport Winner from '../winner/winner';\r\nimport { GAME_SIZE, GAME_DIFICULTY } from '../../helpers/optionArrays';\r\nimport type { typeWinner } from '../../helpers/types';\r\n\r\nimport {\r\n  drawBombs,\r\n  drawGrid,\r\n  drawNumbers,\r\n  drawAroundFirstClicked,\r\n  adjacentCellsNoBombs,\r\n  drawGameOver,\r\n  checkWinner,\r\n} from '../../helpers/helperFunctions';\r\nimport style from './minesweeper.module.scss';\r\n\r\nlet isGameStarted = false;\r\nlet isGameOver = false;\r\nlet isWinner = false;\r\nlet firstMoveDone = false;\r\nlet isGridDisabled = false;\r\n\r\nconst Minesweeper = () => {\r\n  const [gridSize, setGridSize] = useState(10);\r\n  const [difficulty, setDifficulty] = useState(10);\r\n  const [grid, setGrid] = useState(drawGrid(gridSize));\r\n  const [showResults, setShowResults] = useState(false);\r\n  const [winnerName, setWinnerName] = useState('');\r\n  const [winners, setWinners] = useState<typeWinner[]>([]);\r\n\r\n  useEffect(() => {\r\n    const minesweeperStorage = localStorage.getItem('minesweeper');\r\n    minesweeperStorage && setWinners(JSON.parse(minesweeperStorage));\r\n  }, []);\r\n\r\n\r\n  const handleOpen = (rowI: number, colI: number) => {\r\n    const copyGrid = cloneDeep(grid);\r\n    const cell = { rowI, colI };\r\n\r\n    if (grid[rowI][colI].haveFlag) {\r\n      return;\r\n    }\r\n    if (grid[rowI][colI].cell === 'bomb') {\r\n      const gameOverGrid = drawGameOver(gridSize, copyGrid);\r\n      isGameOver = true;\r\n      isGridDisabled = true;\r\n      setGrid(gameOverGrid);\r\n      return;\r\n    }\r\n    if (!firstMoveDone) {\r\n      const BOMB_COUNT = round(gridSize / difficulty);\r\n      const gridWithBombs = drawBombs(cell, BOMB_COUNT, copyGrid);\r\n      const gridEmtptyFirst = drawAroundFirstClicked(cell, gridSize, gridWithBombs);\r\n      const gridWithNumber = drawNumbers(gridSize, gridEmtptyFirst);\r\n      const gridAdjacent = adjacentCellsNoBombs(cell, gridSize, gridWithNumber);\r\n      setGrid(gridAdjacent);\r\n      firstMoveDone = true;\r\n    } else {\r\n      const gridAdjacent = adjacentCellsNoBombs(cell, gridSize, copyGrid);\r\n      gridAdjacent[rowI][colI].isOpen = true;\r\n      if (checkWinner(gridSize, gridAdjacent)) {\r\n        isWinner = true;\r\n      }\r\n      setGrid(gridAdjacent);\r\n    }\r\n  };\r\n  const hadleRightClick = (\r\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\r\n    index1: number,\r\n    index2: number\r\n  ) => {\r\n    e.preventDefault();\r\n    const copyGrid = cloneDeep(grid);\r\n    copyGrid[index1][index2].haveFlag = !copyGrid[index1][index2].haveFlag;\r\n    setGrid(copyGrid);\r\n  };\r\n\r\n  const handleStart = () => {\r\n    const copyGrid = drawGrid(gridSize);\r\n    setGrid(copyGrid);\r\n    isGameStarted = !isGameStarted;\r\n    firstMoveDone = false;\r\n    isGameOver = false;\r\n    isGridDisabled = false;\r\n    isWinner = false;\r\n  };\r\n  const handleRestart = () => {\r\n    const copyGrid = drawGrid(gridSize);\r\n    setGrid(copyGrid);\r\n    firstMoveDone = false;\r\n    isGameOver = false;\r\n    isGridDisabled = false;\r\n    isWinner = false;\r\n  };\r\n  const handleWinner = () => {\r\n    const copyWinners = [...winners];\r\n    const newWinner:typeWinner = {\r\n      id: uuidv4(),\r\n      name: winnerName,\r\n      time: 23,\r\n      size: 'large',\r\n      difficulty: 'hard',\r\n    };\r\n\r\n    isWinner = false;\r\n    isGameStarted = false;\r\n    localStorage.setItem('minesweeper', JSON.stringify([...copyWinners, newWinner]));\r\n    setWinners([...copyWinners, newWinner]);\r\n    setWinnerName('');\r\n\r\n  };\r\n\r\n  return (\r\n    <div className=\"conatainer\">\r\n      <div className=\"row\">\r\n        <div className=\"col-xs-12\">\r\n          <Header\r\n            isGameStarted={isGameStarted}\r\n            firstMoveDone={firstMoveDone}\r\n            showResults={showResults}\r\n            gameSizeArr={GAME_SIZE}\r\n            gameDifficultyArr={GAME_DIFICULTY}\r\n            gameSize={gridSize}\r\n            gameDifficulty={difficulty}\r\n            handleStart={() => handleStart()}\r\n            handleRestart={() => handleRestart()}\r\n            handleShowResults={() => setShowResults(!showResults)}\r\n            handleGridSizeChange={(e) => setGridSize(parseInt(e.target.value, 10))}\r\n            handleDifficultyChange={(e) => setDifficulty(parseInt(e.target.value, 10))}\r\n          />\r\n          <Results showResults={showResults} winners={winners} />\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-xs-12\">\r\n          {isGameStarted && (\r\n            <div\r\n              className={style.minesweeper}\r\n              style={{\r\n                maxWidth: `${gridSize * 30}px`,\r\n              }}\r\n            >\r\n              {grid.map((RowArr, rowI) =>\r\n                RowArr.map((oneCell, colI) => (\r\n                  <OneCell\r\n                    key={oneCell.id}\r\n                    oneCell={oneCell}\r\n                    hadleRightClick={(e) => hadleRightClick(e, rowI, colI)}\r\n                    handleOpen={() => handleOpen(rowI, colI)}\r\n                    isGridDisabled={isGridDisabled}\r\n                    gridSize={gridSize}\r\n                  />\r\n                ))\r\n              )}\r\n              {isGameOver && <GameOver />}\r\n              {isWinner && (\r\n                <Winner\r\n                  winnerName={winnerName}\r\n                  handleWinnerName={(e) => setWinnerName(e.target.value)}\r\n                  handleWinner={() => handleWinner()}\r\n                />\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Minesweeper;\r\n","import React from 'react';\nimport 'flexboxgrid';\nimport Minesweeper from './components/minesweeper/minesweeper';\n\nconst App = () => {\n  return (\n    <div>\n      <div className=\"container\">\n        <Minesweeper />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport 'flexboxgrid';\nimport './styles/helpers.scss';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}