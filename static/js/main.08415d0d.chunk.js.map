{"version":3,"sources":["components/minesweeperCell/oneCell.module.scss","components/options/options.module.scss","components/header/header.module.scss","components/minesweeper/minesweeper.module.scss","components/minesweeperCell/oneCell.tsx","helpers/optionArrays.tsx","components/options/options.tsx","components/header/header.tsx","helpers/helperFunctions.tsx","components/minesweeper/minesweeper.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","OneCell","oneCell","handleOpen","hadleRightClick","gridSize","disabled","isOpen","haveFlag","cell","cellStyle","flexBasis","paddingTop","className","style","cellOpen","onContextMenu","e","preventDefault","cellOpenText","image","src","alt","type","cellClose","flag","onClick","GAME_SIZE","name","size","GAME_DIFICULTY","difficulty","Options","gameSize","gameDifficulty","handleGridSizeChange","handleDifficultyChange","options","htmlFor","label","id","value","onChange","map","option","Header","gameOver","isGameStarted","handleStart","header","button","startFinish","drawGrid","gridArr","gridArr2d","i","j","push","countNumber","gridCopy","rowI","colI","count","Math","max","min","adjacentCellsNoBombs","grid","firstMoveDone","Minesweeper","useState","setGridSize","setDifficulty","setGrid","copyGrid","cloneDeep","gameOverGrid","drawGameOver","gridAdjacent","gridWithBombs","bombCount","forEach","arr","randomNumber","random","randomCells","sampleSize","drawBombs","round","gridEmtptyFirst","drawAroundFirstClicked","gridWithNumber","drawNumbers","minesweeperStyle","maxWidth","parseInt","target","minesweeper","RowArr","index1","index2","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08415d0d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cellClose\":\"oneCell_cellClose__2vNzM\",\"cellOpen\":\"oneCell_cellOpen__3BM0-\",\"cellOpenText\":\"oneCell_cellOpenText__1F3z8\",\"image\":\"oneCell_image__295S0\",\"flag\":\"oneCell_flag__1NCFD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"options\":\"options_options__1p9M2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__16fGl\",\"startFinish\":\"header_startFinish__1xrhN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"minesweeper\":\"minesweeper_minesweeper__33qms\"};","/* eslint-disable max-len */\r\nimport React, { FC } from 'react';\r\nimport style from './oneCell.module.scss';\r\nimport type { Grid } from '../../helpers/helperFunctions';\r\n\r\ntype Props = {\r\n  oneCell: Grid;\r\n  hadleRightClick: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\r\n  handleOpen: () => void;\r\n  disabled: boolean;\r\n  gridSize: number;\r\n};\r\n\r\nconst OneCell: FC<Props> = ({ oneCell, handleOpen, hadleRightClick, gridSize, disabled }) => {\r\n  const { isOpen, haveFlag, cell } = oneCell;\r\n\r\n  const cellStyle = {\r\n    flexBasis: `${100 / gridSize}%`,\r\n    paddingTop: `${100 / gridSize}%`,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isOpen ? (\r\n        <div className={style.cellOpen} onContextMenu={(e) => e.preventDefault()} style={cellStyle}>\r\n          <span className={style.cellOpenText}>\r\n            {cell > 0 && cell}\r\n            {cell === 'bomb' && (\r\n              <img\r\n                className={style.image}\r\n                src=\"https://w7.pngwing.com/pngs/220/369/png-transparent-minesweeper-pro-classic-mine-sweeper-minesweeper-plus-likeminesweeper-bomb-game-computer-wallpaper-video-game.png\"\r\n                alt=\"bomb\"\r\n              />\r\n            )}\r\n          </span>\r\n        </div>\r\n      ) : (\r\n        <button\r\n          type=\"button\"\r\n          className={`${style.cellClose} ${haveFlag && style.flag}`}\r\n          style={cellStyle}\r\n          onClick={handleOpen}\r\n          disabled={disabled}\r\n          onContextMenu={(e) => hadleRightClick(e)}\r\n        >\r\n          {' '}\r\n          {/* {isOpen && cell > 0 && cell} */}\r\n        </button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OneCell;\r\n","export type GameSize = {\r\n  name: string;\r\n  size: number;\r\n};\r\nexport type GameDifficulty = {\r\n  name: string;\r\n  difficulty: number;\r\n};\r\n\r\nexport const GAME_SIZE: GameSize[] = [\r\n  { name: ' small', size: 10 },\r\n  { name: 'medium', size: 15 },\r\n  { name: 'large', size: 25 },\r\n];\r\n\r\nexport const GAME_DIFICULTY: GameDifficulty[] = [\r\n  { name: 'easy', difficulty: 5 },\r\n  { name: 'medium', difficulty: 3 },\r\n  { name: 'hard', difficulty: 2 },\r\n];\r\n","import React, { FC } from 'react';\r\nimport style from './options.module.scss';\r\nimport { GAME_SIZE, GAME_DIFICULTY } from '../../helpers/optionArrays';\r\n\r\ntype Props = {\r\n  gameSize: number;\r\n  gameDifficulty: number;\r\n  handleGridSizeChange: (e: React.ChangeEvent<HTMLSelectElement>) => void;\r\n  handleDifficultyChange: (e: React.ChangeEvent<HTMLSelectElement>) => void;\r\n};\r\n\r\nconst Options: FC<Props> = ({\r\n  gameSize,\r\n  gameDifficulty,\r\n  handleGridSizeChange,\r\n  handleDifficultyChange,\r\n}) => {\r\n  return (\r\n    <div className={style.options}>\r\n      <label htmlFor=\"gameSize\" className={style.label}>\r\n        Choose game size{' '}\r\n        <select\r\n          id=\"gameSize\"\r\n          name=\"gameSize\"\r\n          value={gameSize}\r\n          onChange={handleGridSizeChange}\r\n          //   className={style.button}\r\n        >\r\n          {GAME_SIZE.map(({ name, size }) => (\r\n            <option key={name} value={size} className={style.option}>\r\n              {name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </label>\r\n      <label htmlFor=\"difficulty\" className={style.label}>\r\n        Choose difficulty{' '}\r\n        <select\r\n          id=\"difficulty\"\r\n          name=\"difficulty\"\r\n          value={gameDifficulty}\r\n          onChange={handleDifficultyChange}\r\n          //   className={style.button}\r\n        >\r\n          {GAME_DIFICULTY.map(({ name, difficulty }) => (\r\n            <option key={name} value={difficulty} className={style.option}>\r\n              {name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Options;\r\n","import React, { FC } from 'react';\r\nimport style from './header.module.scss';\r\nimport Options from '../options/options';\r\n\r\ntype Props = {\r\n  gameOver: boolean;\r\n  gameSize: number;\r\n  gameDifficulty: number;\r\n  isGameStarted: boolean;\r\n  handleStart: () => void;\r\n  handleGridSizeChange: (e: React.ChangeEvent<HTMLSelectElement>) => void;\r\n  handleDifficultyChange: (e: React.ChangeEvent<HTMLSelectElement>) => void;\r\n};\r\n\r\nconst Header: FC<Props> = ({\r\n  gameOver,\r\n  gameSize,\r\n  gameDifficulty,\r\n  isGameStarted,\r\n  handleStart,\r\n  handleGridSizeChange,\r\n  handleDifficultyChange,\r\n}) => {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className={style.header}>\r\n        {!isGameStarted ? (\r\n          <>\r\n            <div className=\"col-xs-3\">\r\n              <div className={style.startFinish}>\r\n                <button type=\"button\" onClick={handleStart} className={style.button}>\r\n                  Start\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-xs-6\">\r\n              <Options\r\n                gameSize={gameSize}\r\n                gameDifficulty={gameDifficulty}\r\n                handleGridSizeChange={handleGridSizeChange}\r\n                handleDifficultyChange={handleDifficultyChange}\r\n              />\r\n            </div>\r\n            <div className=\"col-xs-3\">Results</div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"col-xs-3\">\r\n              <button type=\"button\" onClick={handleStart} className={style.button}>\r\n                END\r\n              </button>\r\n            </div>\r\n            <div className=\"col-xs-6\">count / time</div>\r\n            <div className=\"col-xs-3\">Results</div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","/* eslint-disable max-len */\r\n/* eslint-disable import/no-cycle */\r\nimport { cloneDeep, random, sampleSize } from 'lodash';\r\n\r\nexport type Cell = { rowI: number; colI: number };\r\nexport type CellText = 'bomb' | 'empty' | number;\r\nexport type Grid = { id: number; cell: CellText; isOpen: boolean; haveFlag: boolean };\r\n\r\n\r\n\r\nexport const drawGrid = (size: number) => {\r\n  let gridArr: Grid[] = [];\r\n  const gridArr2d: Grid[][] = [];\r\n  let id = 1;\r\n  for (let i = 0; i < size; i++) {\r\n    for (let j = 0; j < size; j++) {\r\n      gridArr.push({ id, cell: 0, isOpen: false, haveFlag: false });\r\n      id += 1;\r\n    }\r\n    gridArr2d.push(gridArr);\r\n    gridArr = [];\r\n  }\r\n  return gridArr2d;\r\n};\r\n\r\nexport const drawBombs = (cell: Cell, bombCount:number, grid: Grid[][]): Grid[][] => {\r\n  const gridCopy = cloneDeep(grid);\r\n  gridCopy.forEach((arr) => {\r\n    const randomNumber = random(1, bombCount);\r\n    const randomCells = sampleSize(arr, randomNumber);\r\n    for (let i = 0; i < randomNumber; i++) {\r\n      randomCells[i].cell = 'bomb';\r\n    }\r\n  });\r\n  gridCopy[cell.rowI][cell.colI].cell = 0;\r\n  return gridCopy;\r\n};\r\n\r\nexport const drawAroundFirstClicked = (cell: Cell, size: number, grid: Grid[][]): Grid[][] => {\r\n  const gridCopy = cloneDeep(grid);\r\n  const { rowI, colI } = cell;\r\n  for (let i = Math.max(rowI - 1, 0); i <= Math.min(rowI + 1, size - 1); i++) {\r\n    for (let j = Math.max(colI - 1, 0); j <= Math.min(colI + 1, size - 1); j++) {\r\n      if (gridCopy[i][j].cell === 'bomb') {\r\n        gridCopy[i][j].cell = 0;\r\n      }\r\n    }\r\n  }\r\n  return gridCopy;\r\n};\r\n\r\nexport const drawNumbers = (size: number, grid: Grid[][]): Grid[][] => {\r\n  const gridCopy = cloneDeep(grid);\r\n  for (let i = 0; i < size; i++) {\r\n    for (let j = 0; j < size; j++) {\r\n      if (gridCopy[i][j].cell === 0) {\r\n        const cell = { rowI: i, colI: j };\r\n        const count = countNumber(cell, size, gridCopy);\r\n        if (count === 0) {\r\n          gridCopy[i][j].cell = 'empty';\r\n        } else {\r\n          gridCopy[i][j].cell = count;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return gridCopy;\r\n};\r\n\r\nconst countNumber = (cell: Cell, size: number, gridCopy: Grid[][]): number => {\r\n  const { rowI, colI } = cell;\r\n  let count = 0;\r\n  for (let i = Math.max(rowI - 1, 0); i <= Math.min(rowI + 1, size - 1); i++) {\r\n    for (let j = Math.max(colI - 1, 0); j <= Math.min(colI + 1, size - 1); j++) {\r\n      if (gridCopy[i][j].cell === 'bomb') count += 1;\r\n    }\r\n  }\r\n  return count;\r\n};\r\n\r\nexport const adjacentCellsNoBombs = (cell: Cell, size: number, grid: Grid[][]): Grid[][] => {\r\n  const { rowI, colI } = cell;\r\n  const gridCopy = [...grid];\r\n  const count = countNumber(cell, size, gridCopy);\r\n  gridCopy[rowI][colI].isOpen = true;\r\n\r\n  if (count === 0) {\r\n    for (let i = Math.max(rowI - 1, 0); i <= Math.min(rowI + 1, size - 1); i++) {\r\n      for (let j = Math.max(colI - 1, 0); j <= Math.min(colI + 1, size - 1); j++) {\r\n        if (gridCopy[i][j].cell !== 'bomb' && gridCopy[i][j].isOpen === false) {\r\n          adjacentCellsNoBombs({ rowI: i, colI: j }, size, gridCopy);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return gridCopy;\r\n};\r\n\r\nexport const drawGameOver = (size: number, grid: Grid[][]): Grid[][] => {\r\n  const gridCopy = cloneDeep(grid);\r\n  for (let i = 0; i < size; i++) {\r\n    for (let j = 0; j < size; j++) {\r\n      if (gridCopy[i][j].cell === 'bomb'){\r\n        gridCopy[i][j].isOpen = true;\r\n      }\r\n    }\r\n  }\r\n  return gridCopy;\r\n};\r\n","/* eslint-disable max-len */\r\nimport React, { useState } from 'react';\r\nimport { cloneDeep, round } from 'lodash';\r\nimport OneCell from '../minesweeperCell/oneCell';\r\nimport Header from '../header/header';\r\nimport {\r\n  drawBombs,\r\n  drawGrid,\r\n  drawNumbers,\r\n  drawAroundFirstClicked,\r\n  adjacentCellsNoBombs,\r\n  drawGameOver,\r\n} from '../../helpers/helperFunctions';\r\nimport style from './minesweeper.module.scss';\r\n\r\nlet isGameStarted = false;\r\nlet gameOver = false;\r\nlet firstMoveDone = false;\r\nlet disabled = false;\r\n\r\n\r\nconst Minesweeper = () => {\r\n  const [gridSize, setGridSize] = useState(15);\r\n  const [difficulty, setDifficulty] = useState(3);\r\n  const [grid, setGrid] = useState(drawGrid(gridSize));\r\n\r\n  const handleOpen = (rowI: number, colI: number) => {\r\n    const copyGrid = cloneDeep(grid);\r\n    const cell = { rowI, colI };\r\n\r\n    if (grid[rowI][colI].haveFlag) {\r\n      return;\r\n    }\r\n    if (grid[rowI][colI].cell === 'bomb') {\r\n      const gameOverGrid = drawGameOver(gridSize, copyGrid);\r\n      gameOver = true;\r\n      disabled = true;\r\n      setGrid(gameOverGrid);\r\n      return;\r\n    }\r\n    if (!firstMoveDone) {\r\n      const BOMB_COUNT = round(gridSize / difficulty);\r\n      const gridWithBombs = drawBombs(cell, BOMB_COUNT, copyGrid);\r\n      const gridEmtptyFirst = drawAroundFirstClicked(cell, gridSize, gridWithBombs);\r\n      const gridWithNumber = drawNumbers(gridSize, gridEmtptyFirst);\r\n      const gridAdjacent = adjacentCellsNoBombs(cell, gridSize, gridWithNumber);\r\n      setGrid(gridAdjacent);\r\n      firstMoveDone = true;\r\n    } else {\r\n      const gridAdjacent = adjacentCellsNoBombs(cell, gridSize, copyGrid);\r\n      gridAdjacent[rowI][colI].isOpen = true;\r\n      setGrid(gridAdjacent);\r\n    }\r\n  };\r\n\r\n  const handleStart = () => {\r\n    const copyGrid = drawGrid(gridSize);\r\n    setGrid(copyGrid);\r\n    isGameStarted = !isGameStarted;\r\n    firstMoveDone = false;\r\n    gameOver = false;\r\n    disabled = false;\r\n  };\r\n\r\n  const handleGridSizeChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setGridSize(parseInt(e.target.value, 10));\r\n  };\r\n  const handleDifficultyChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setDifficulty(parseInt(e.target.value, 10));\r\n  };\r\n\r\n  const hadleRightClick = (\r\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\r\n    index1: number,\r\n    index2: number\r\n  ) => {\r\n    e.preventDefault();\r\n    const copyGrid = cloneDeep(grid);\r\n    copyGrid[index1][index2].haveFlag = !copyGrid[index1][index2].haveFlag;\r\n    setGrid(copyGrid);\r\n  };\r\n\r\n  const minesweeperStyle = {\r\n    maxWidth: `${gridSize * 20}px`,\r\n  };\r\n\r\n  return (\r\n    <div className=\"conatainer\">\r\n      <div className=\"row\">\r\n        <div className=\"col-xs-12\">\r\n          <Header\r\n            handleStart={() => handleStart()}\r\n            gameOver={gameOver}\r\n            handleGridSizeChange={(e) => handleGridSizeChange(e)}\r\n            gameSize={gridSize}\r\n            isGameStarted={isGameStarted}\r\n            gameDifficulty={difficulty}\r\n            handleDifficultyChange={(e) => handleDifficultyChange(e)}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-xs-12\">\r\n          {isGameStarted && (\r\n            <div className={style.minesweeper} style={minesweeperStyle}>\r\n              {grid.map((RowArr, rowI) =>\r\n                RowArr.map((oneCell, colI) => (\r\n                  <OneCell\r\n                    key={oneCell.id}\r\n                    oneCell={oneCell}\r\n                    hadleRightClick={(e) => hadleRightClick(e, rowI, colI)}\r\n                    handleOpen={() => handleOpen(rowI, colI)}\r\n                    disabled={disabled}\r\n                    gridSize={gridSize}\r\n                  />\r\n                ))\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Minesweeper;\r\n","import React from 'react';\nimport './App.css';\nimport 'flexboxgrid';\nimport Minesweeper from './components/minesweeper/minesweeper';\n\nconst App = () => {\n  return (\n    <div>\n      <div className=\"container\">\n        <Minesweeper />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport 'flexboxgrid';\nimport './styles/helpers.scss';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}