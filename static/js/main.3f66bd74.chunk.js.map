{"version":3,"sources":["components/oneCell/oneCell.module.scss","components/winner/winner.module.scss","components/results/results.module.scss","commonComponents/table/table.module.scss","components/restart/restart.module.scss","components/gameOver/gameOver.module.scss","components/options/options.module.scss","commonComponents/selectOption/selectOption.module.scss","components/header/header.module.scss","components/minesweeper/minesweeper.module.scss","components/timer/timer.module.scss","commonComponents/button/button.module.scss","commonComponents/input/input.module.scss","reportWebVitals.ts","helpers/helperFunctions/helperFunctions.tsx","assets/images/bomb.png","components/oneCell/oneCell.tsx","components/timer/timer.tsx","commonComponents/button/button.tsx","components/header/header.tsx","commonComponents/table/table.tsx","components/results/results.tsx","components/gameOver/gameOver.tsx","commonComponents/input/input.tsx","components/winner/winner.tsx","assets/images/sad.png","assets/images/happy.png","components/restart/restart.tsx","commonComponents/selectOption/selectOption.tsx","components/options/options.tsx","components/minesweeper/minesweeper.tsx","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","drawGrid","size","gridArr","gridArr2d","id","i","j","push","cell","isOpen","haveFlag","countNumber","gridCopy","rowI","colI","count","Math","max","min","firstMoveDrawGrid","bombCount","grid","gridWithNumber","cloneDeep","drawNumbers","drawAroundFirstClicked","forEach","arr","bombCountEachRow","random","length","drawBombs","adjacentCellsNoBombs","timeConvertor","time","minutes","floor","seconds","converted","toFixed","Color","OneCell","oneCell","handleOpen","hadleRightClick","gridSize","isGridDisabled","cellStyle","flexBasis","paddingTop","className","style","cellOpen","onContextMenu","e","preventDefault","cellOpenText","color","image","src","bomb","alt","type","cellClose","flag","onClick","disabled","Timer","isTimerStarted","resetTimer","getTimerValue","useState","timeCount","setTimeCount","myInterval","useRef","useEffect","current","setInterval","oldTimeCount","clearInterval","timer","Button","handleClick","label","Header","handleShowOptions","handleShowResults","header","title","Table","tableData","table","tableTh","map","index","name","difficulty","newResult","tableTr","substring","Results","showResults","results","sort","a","b","splice","active","data-testid","heading","GameOver","gameOver","gameOverText","gameOverGG","Input","value","placeholder","focus","handleInputName","inputEl","ref","onChange","Winner","winnerName","handleWinnerName","handleWinner","textAndInputWrapper","paragraph","inputWrapper","Restart","handleRestart","isGameOver","restartButtonWrapper","restartButton","sad","happy","SelectOption","optionArr","classNameLabel","classNameSelect","classNameOption","onChangeHandler","htmlFor","optionName","optionValue","gameSizeArr","gameDifficultyArr","Options","showOptions","saveOptionChanges","setGridSize","setDifficulty","options","parseInt","target","saveButton","Minesweeper","setGrid","setShowResults","setShowOptions","setWinnerName","setResults","setTimer","isWinner","isFirstMoveDone","minesweeperStorage","localStorage","getItem","JSON","parse","copyGrid","gameOverGrid","drawGameOver","gridAdjacent","some","array","item","checkWinner","round","gridFirstMove","minesweeper","gameSize","gameDifficulty","diff","maxWidth","RowArr","copyResults","result","findSizeIndex","findIndex","findDiffIndex","newWinner","uuidv4","toast","success","autoClose","background","fontSize","width","minHeight","setItem","stringify","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mFACAA,EAAOC,QAAU,CAAC,UAAY,2BAA2B,SAAW,0BAA0B,aAAe,8BAA8B,MAAQ,uBAAuB,KAAO,wB,gBCAjLD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,QAAU,wBAAwB,OAAS,uBAAuB,oBAAsB,oCAAoC,UAAY,0BAA0B,aAAe,6BAA6B,MAAQ,wB,iBCAxQD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,QAAU,2B,gBCAhGD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,QAAU,uBAAuB,QAAU,uBAAuB,UAAY,2B,gBCA7HD,EAAOC,QAAU,CAAC,qBAAuB,sCAAsC,cAAgB,+BAA+B,MAAQ,yB,iBCAtID,EAAOC,QAAU,CAAC,SAAW,2BAA2B,aAAe,+BAA+B,WAAa,6BAA6B,GAAK,uB,gBCArJD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,WAAa,8B,gBCAnGD,EAAOC,QAAU,CAAC,MAAQ,4BAA4B,OAAS,6BAA6B,OAAS,+B,iBCArGD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,wB,gBCA1DD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,KAAO,4B,kBCAxED,EAAOC,QAAU,CAAC,MAAQ,uB,gBCA1BD,EAAOC,QAAU,CAAC,mBAAqB,mCAAmC,qBAAuB,qCAAqC,cAAgB,8BAA8B,WAAa,6B,gBCAjMD,EAAOC,QAAU,CAAC,MAAQ,uB,2GCaXC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,qCCHDQ,EAAW,SAACC,GAIvB,IAHA,IAAIC,EAAkB,GAChBC,EAAsB,GACxBC,EAAK,EACAC,EAAI,EAAGA,EAAIJ,EAAMI,IAAK,CAC7B,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAMK,IACxBJ,EAAQK,KAAK,CAAEH,KAAII,KAAM,EAAGC,QAAQ,EAAOC,UAAU,IACrDN,GAAM,EAERD,EAAUI,KAAKL,GACfA,EAAU,GAEZ,OAAOC,GAgDIQ,EAAc,SAACH,EAAYP,EAAcW,GAGpD,IAHoF,IAC5EC,EAAeL,EAAfK,KAAMC,EAASN,EAATM,KACVC,EAAQ,EACHV,EAAIW,KAAKC,IAAIJ,EAAO,EAAG,GAAIR,GAAKW,KAAKE,IAAIL,EAAO,EAAGZ,EAAO,GAAII,IACrE,IAAK,IAAIC,EAAIU,KAAKC,IAAIH,EAAO,EAAG,GAAIR,GAAKU,KAAKE,IAAIJ,EAAO,EAAGb,EAAO,GAAIK,IACzC,SAAxBM,EAASP,GAAGC,GAAGE,OAAiBO,GAAS,GAGjD,OAAOA,GAGII,EAAmB,SAACX,EAAYY,EAAkBnB,EAAaoB,GAC1E,IAGMC,EAjCmB,SAACrB,EAAcoB,GAExC,IADA,IAAMT,EAAWW,oBAAUF,GAClBhB,EAAI,EAAGA,EAAIJ,EAAMI,IACxB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAMK,IACxB,GAA4B,IAAxBM,EAASP,GAAGC,GAAGE,KAAY,CAC7B,IACMO,EAAQJ,EADD,CAAEE,KAAMR,EAAGS,KAAMR,GACEL,EAAMW,GAEpCA,EAASP,GAAGC,GAAGE,KADH,IAAVO,EACoB,QAEAA,EAK9B,OAAOH,EAkBgBY,CAAYvB,EA9CC,SAACO,EAAYP,EAAcoB,GAG/D,IAFA,IAAMT,EAAWW,oBAAUF,GACnBR,EAAeL,EAAfK,KAAMC,EAASN,EAATM,KACLT,EAAIW,KAAKC,IAAIJ,EAAO,EAAG,GAAIR,GAAKW,KAAKE,IAAIL,EAAO,EAAGZ,EAAO,GAAII,IACrE,IAAK,IAAIC,EAAIU,KAAKC,IAAIH,EAAO,EAAG,GAAIR,GAAKU,KAAKE,IAAIJ,EAAO,EAAGb,EAAO,GAAIK,IACzC,SAAxBM,EAASP,GAAGC,GAAGE,OACjBI,EAASP,GAAGC,GAAGE,KAAO,GAI5B,OAAOI,EAmCiBa,CAAuBjB,EAAMP,EA3D9B,SAACO,EAAYY,EAAmBC,GACvD,IAAMT,EAAWW,oBAAUF,GAU3B,OATAT,EAASc,SAAQ,SAACC,GAGhB,IAFA,IAAMC,EAAmBC,iBAAO,EAAGT,GAE1Bf,EAAI,EAAGA,EAAIuB,EAAkBvB,IAEpCsB,EADoBE,iBAAOF,EAAIG,OAAS,IACvBtB,KAAO,UAG5BI,EAASJ,EAAKK,MAAML,EAAKM,MAAMN,KAAO,EAC/BI,EA+CemB,CAAUvB,EAAMY,EADrBG,oBAAUF,MAI3B,OAAOW,EAAqBxB,EAAMP,EAAMqB,IAG7BU,EAAuB,SAAvBA,EAAwBxB,EAAYP,EAAcoB,GAA8B,IACnFR,EAAeL,EAAfK,KAAMC,EAASN,EAATM,KACRF,EAAQ,YAAOS,GACfN,EAAQJ,EAAYH,EAAMP,EAAMW,GAGtC,GAFAA,EAASC,GAAMC,GAAML,QAAS,EAEhB,IAAVM,EACF,IAAK,IAAIV,EAAIW,KAAKC,IAAIJ,EAAO,EAAG,GAAIR,GAAKW,KAAKE,IAAIL,EAAO,EAAGZ,EAAO,GAAII,IACrE,IAAK,IAAIC,EAAIU,KAAKC,IAAIH,EAAO,EAAG,GAAIR,GAAKU,KAAKE,IAAIJ,EAAO,EAAGb,EAAO,GAAIK,IACzC,SAAxBM,EAASP,GAAGC,GAAGE,OAA6C,IAA1BI,EAASP,GAAGC,GAAGG,QACnDuB,EAAqB,CAAEnB,KAAMR,EAAGS,KAAMR,GAAKL,EAAMW,GAKzD,OAAOA,GAuBIqB,EAAgB,SAACC,GAC5B,IAAMC,EAAkBnB,KAAKoB,MAAMF,EAAO,IACpCG,EAAkBH,EAAiB,GAAVC,EAC3BG,EAAY,GAMhB,OAJEA,GADEH,EAAU,EACH,UAAOA,EAAP,aAAmBE,EAAQE,QAAQ,GAAnC,KAEA,UAAOF,EAAQE,QAAQ,GAAvB,MAKAC,EAAQ,SAAChC,GACpB,OAAQA,GACN,KAAK,EACH,MAAO,MACT,KAAK,EACH,MAAO,OACT,KAAK,EACH,MAAO,QACT,KAAK,EACH,MAAO,SACT,KAAK,EACH,MAAO,MACT,KAAK,EACH,MAAO,SACT,KAAK,EACH,MAAO,QACT,KAAK,EACH,MAAO,OACT,QACE,MAAO,KC1JE,MAA0B,iC,gBC6C1BiC,EAvCkB,SAAC,GAM3B,IALLC,EAKI,EALJA,QACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,gBACAC,EAEI,EAFJA,SACAC,EACI,EADJA,eAEQrC,EAA2BiC,EAA3BjC,OAAQC,EAAmBgC,EAAnBhC,SAAUF,EAASkC,EAATlC,KAEpBuC,EAAY,CAChBC,UAAU,GAAD,OAAK,IAAMH,EAAX,KACTI,WAAW,GAAD,OAAK,IAAMJ,EAAX,MAGZ,OACE,mCACGpC,EACC,qBAAKyC,UAAWC,IAAMC,SAAUC,cAAe,SAACC,GAAD,OAAOA,EAAEC,kBAAkBJ,MAAOJ,EAAjF,SACE,uBAAMG,UAAS,UAAKC,IAAMK,aAAX,KAA4BL,MAAO,CAAEM,MAAOjB,EAAMhC,IAAjE,UACGA,EAAO,GAAKA,EACH,SAATA,GAAmB,qBAAK0C,UAAWC,IAAMO,MAAOC,IAAKC,EAAMC,IAAI,cAIpE,wBACEC,KAAK,SACLZ,UAAS,UAAKC,IAAMY,UAAX,YAAwBrD,GAAYyC,IAAMa,MACnDb,MAAOJ,EACPkB,QAAStB,EACTuB,SAAUpB,EACVO,cAAe,SAACC,GAAD,OAAOV,EAAgBU,IANxC,SAQG,S,kCCTIa,EAxBc,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,eAAgBC,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,cAAoB,EAC5CC,mBAAS,GADmC,mBACvEC,EADuE,KAC5DC,EAD4D,KAExEC,EAAaC,mBAmBnB,OAjBAC,qBAAU,WACJP,GACFI,EAAa,KAEd,CAACJ,IAEJO,qBAAU,WACJR,EACFM,EAAWG,QAAUC,aAAY,WAC/BL,GAAa,SAACM,GAAD,OAAkBA,EAAe,QAC7C,MAGLC,cAAcN,EAAWG,SACzBP,EAAcE,MACb,CAACJ,IAEG,qBAAKlB,UAAWC,IAAM8B,MAAtB,SAA8BhD,EAAcuC,M,iBCTtCU,EAbgB,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,YAAuD,IAA1CjC,iBAA0C,MAAhC,SAAgC,EAAtBgB,EAAsB,EAAtBA,SAAUkB,EAAY,EAAZA,MAC3E,OACE,wBACEtB,KAAK,SACLG,QAASkB,EACTjC,UAAWC,IAAM,GAAD,OAAID,IACpBgB,SAAUA,EAJZ,SAMGkB,KCsCQC,EA5CgB,SAAC,GAMzB,IALLjB,EAKI,EALJA,eACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,cACAgB,EAEI,EAFJA,kBACAC,EACI,EADJA,kBAEA,OACE,mCACE,sBAAKrC,UAAWC,IAAMqC,OAAtB,UACE,qBAAKtC,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACE,oBAAIA,UAAWC,IAAMsC,MAArB,6BAIJ,sBAAKvC,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SACE,cAAC,EAAD,CACEiC,YAAaG,EACbpC,UAAU,qBACVkC,MAAM,cAGV,qBAAKlC,UAAU,WAAf,SACE,cAAC,EAAD,CACEkB,eAAgBA,EAChBC,WAAYA,EACZC,cAAeA,MAGnB,qBAAKpB,UAAU,WAAf,SACE,cAAC,EAAD,CACEiC,YAAaI,EACbrC,UAAU,qBACVkC,MAAM,uB,iCCTLM,EA3Bc,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAC9B,OACE,wBAAOzC,UAAWC,IAAMyC,MAAxB,UACE,gCACE,qBAAI1C,UAAWC,IAAM0C,QAArB,UACE,mCACA,sCACA,sCACA,2CACA,iDAGJ,gCACGF,EAAUG,KAAI,WAAkDC,GAAlD,IAAG3F,EAAH,EAAGA,GAAI4F,EAAP,EAAOA,KAAM9D,EAAb,EAAaA,KAAMjC,EAAnB,EAAmBA,KAAMgG,EAAzB,EAAyBA,WAAYC,EAArC,EAAqCA,UAArC,OACb,qBAAahD,UAAS,UAAKC,IAAMgD,QAAX,YAAsBD,GAAa/C,IAAM+C,WAA/D,UACE,6BAAKH,EAAQ,IACb,6BAAKC,EAAKI,UAAU,EAAG,MACvB,6BAAKnE,EAAcC,KACnB,6BAAKjC,IACL,6BAAKgG,MALE7F,YCKJiG,EAlBkB,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,YAAaC,EAAiC,EAAjCA,QAAShB,EAAwB,EAAxBA,kBAGxD,OAFAgB,EAAQC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEvE,KAAOwE,EAAExE,QAAMyE,OAAO,IAG7C,sBAAKzD,UAAS,UAAKC,IAAMoD,QAAX,YAAsBD,GAAenD,IAAMyD,QAAUC,cAAY,UAA/E,UACE,cAAC,EAAD,CAAQ1B,YAAaI,EAAmBrC,UAAU,uBAAuBkC,MAAM,MAC9EmB,EAAQzE,OAAS,EAChB,qCACE,oBAAIoB,UAAWC,IAAM2D,QAArB,qBACA,cAAC,EAAD,CAAOnB,UAAWY,OAGpB,oBAAIrD,UAAWC,IAAM2D,QAArB,kC,iBCNOC,EATE,WACf,OACE,sBAAK7D,UAAWC,IAAM6D,SAAtB,UACE,sBAAM9D,UAAWC,IAAM8D,aAAvB,oCACA,sBAAM/D,UAAWC,IAAM+D,WAAvB,qB,iCCuBSC,EA1Bc,SAAC,GAMvB,IALLC,EAKI,EALJA,MAKI,IAJJC,mBAII,MAJQ,MAIR,MAHJnE,iBAGI,MAHQ,QAGR,MAFJoE,aAEI,SADJC,EACI,EADJA,gBAEMC,EAAU7C,iBAAyB,MAOzC,OALAC,qBAAU,WAAO,IAAD,EACd0C,IAAK,UACHE,EAAQ3C,eADL,OACH,EAAiByC,WAClB,IAGD,uBACExD,KAAK,OACL2D,IAAKD,EACLH,YAAaA,EACbnE,UAAWC,IAAM,GAAD,OAAID,IACpBkE,MAAOA,EACPM,SAAU,SAACpE,GAAD,OAAOiE,EAAgBjE,OCExBqE,EArBgB,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,WAAYC,EAAqC,EAArCA,iBAAkBC,EAAmB,EAAnBA,aAC9D,OACE,sBAAK5E,UAAWC,IAAMwE,OAAtB,UACE,oBAAIzE,UAAWC,IAAM2D,QAArB,uBACA,sBAAK5D,UAAWC,IAAM4E,oBAAtB,UACE,mBAAG7E,UAAWC,IAAM6E,UAApB,6CACA,sBAAK9E,UAAWC,IAAM8E,aAAtB,UACE,cAAC,EAAD,CACEZ,YAAY,gBACZD,MAAOQ,EACP1E,UAAU,QACVqE,gBAAiB,SAACjE,GAAD,OAAOuE,EAAiBvE,IACzCgE,OAAK,IAEP,cAAC,EAAD,CAAQnC,YAAa2C,EAAc5E,UAAU,aAAakC,MAAM,mB,iBCpB3D,MAA0B,gCCA1B,MAA0B,kCC+B1B8C,EAvBkB,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,cAAeC,EAAiB,EAAjBA,WACjD,OACE,qBAAKlF,UAAWC,IAAMkF,qBAAtB,SACE,sBAAKnF,UAAWC,IAAMmF,cAAtB,UACGF,EACC,qBACEzE,IAAK4E,EACL1E,IAAI,YACJX,UAAWC,IAAMO,QAGnB,qBACEC,IAAK6E,EACL3E,IAAI,cACJX,UAAWC,IAAMO,QAGrB,cAAC,EAAD,CAAQyB,YAAagD,EAAejF,UAAU,gBAAgBkC,MAAM,W,sCCU7DqD,GA9B4B,SAAC,GASrC,IARLrB,EAQI,EARJA,MACApB,EAOI,EAPJA,KACAZ,EAMI,EANJA,MACAsD,EAKI,EALJA,UAKI,IAJJC,sBAII,MAJY,QAIZ,MAHJC,uBAGI,MAHc,SAGd,MAFJC,uBAEI,MAFY,SAEZ,EADJC,EACI,EADJA,gBAEA,OACE,wBAAOC,QAAS/C,EAAM9C,UAAWC,KAAM,GAAD,OAAIwF,IAA1C,UACGvD,EAAO,IACR,wBACEhF,GAAI4F,EACJA,KAAMA,EACNoB,MAAOA,EACPM,SAAUoB,EACV5F,UAAWC,KAAM,GAAD,OAAIyF,IALtB,SAOGF,EAAU5C,KAAI,gBAAGkD,EAAH,EAAGA,WAAYC,EAAf,EAAeA,YAAf,OACb,wBAAyB7B,MAAO6B,EAAa/F,UAAWC,KAAM,GAAD,OAAI0F,IAAjE,SACGG,GADUA,YCpBVE,GAAwB,CACnC,CAAEF,WAAY,SAAUC,YAAa,IACrC,CAAED,WAAY,SAAUC,YAAa,IACrC,CAAED,WAAY,QAASC,YAAa,KAGzBE,GAA8B,CACzC,CAAEH,WAAY,OAAQC,YAAa,IACnC,CAAED,WAAY,SAAUC,YAAa,GACrC,CAAED,WAAY,OAAQC,YAAa,IAGxBG,GAA2B,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,YAAa/D,EAA2C,EAA3CA,kBAAmBgE,EAAwB,EAAxBA,kBAAwB,EACjE/E,mBAAS,IADwD,mBAC1F1B,EAD0F,KAChF0G,EADgF,OAE7DhF,mBAAS,IAFoD,mBAE1F0B,EAF0F,KAE9EuD,EAF8E,KAIjG,OACE,sBAAKtG,UAAS,UAAKC,KAAMsG,QAAX,YAAsBJ,GAAelG,KAAMyD,QAAzD,UACE,cAAC,EAAD,CAAQzB,YAAaG,EAAmBpC,UAAU,uBAAuBkC,MAAM,MAC/E,qCACE,cAAC,GAAD,CACEgC,MAAOvE,EACPuC,MAAM,mBACNY,KAAK,WACL8C,gBAAiB,SAACxF,GAAD,OAAOiG,EAAYG,SAASpG,EAAEqG,OAAOvC,MAAO,MAC7DsB,UAAWQ,GACXP,eAAe,QACfC,gBAAgB,SAChBC,gBAAgB,WAElB,cAAC,GAAD,CACEzB,MAAOnB,EACPD,KAAK,iBACLZ,MAAM,oBACN0D,gBAAiB,SAACxF,GAAD,OAAOkG,EAAcE,SAASpG,EAAEqG,OAAOvC,MAAO,MAC/DsB,UAAWS,GACXR,eAAe,QACfC,gBAAgB,SAChBC,gBAAgB,cAGpB,yBACE/E,KAAK,SACLG,QAAS,kBAAMqF,EAAkBzG,EAAUoD,IAC3C/C,UAAWC,KAAMyG,WAHnB,UAKG,IALH,c,4BCxBOC,GAAc,WAAO,IAAD,EACPtF,mBAASvE,EAAS,KADX,mBACxBqB,EADwB,KAClByI,EADkB,OAEOvF,oBAAS,GAFhB,mBAExB+B,EAFwB,KAEXyD,EAFW,OAGOxF,oBAAS,GAHhB,mBAGxB8E,EAHwB,KAGXW,EAHW,OAIKzF,mBAAS,IAJd,mBAIxBqD,EAJwB,KAIZqC,EAJY,OAKD1F,mBAA0B,IALzB,mBAKxBgC,EALwB,KAKf2D,EALe,OAML3F,mBAAS,GANJ,mBAMxBU,EANwB,KAMjBkF,EANiB,KAQzBV,EAAU9E,iBAAO,CACrB9B,SAAU,GACVoD,WAAY,GACZmC,YAAY,EACZgC,UAAU,EACVC,iBAAiB,EACjBjG,gBAAgB,EAChBtB,gBAAgB,EAChBuB,YAAY,IAGdO,qBAAU,WACR,IAAM0F,EAAqBC,aAAaC,QAAQ,eAChDF,GAAsBJ,EAAWO,KAAKC,MAAMJ,MAC3C,IAEH,IAAM3H,EAAa,SAAC9B,EAAcC,GAChC,IAAM6J,EAAWpJ,oBAAUF,GACrBb,EAAO,CAAEK,OAAMC,QAErB,IAAIO,EAAKR,GAAMC,GAAMJ,SAArB,CAGA,GAA8B,SAA1BW,EAAKR,GAAMC,GAAMN,KAAiB,CACpC,IAAMoK,EhBgDgB,SAAC3K,EAAcoB,GAEzC,IADA,IAAMT,EAAWW,oBAAUF,GAClBhB,EAAI,EAAGA,EAAIJ,EAAMI,IACxB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAMK,IACI,SAAxBM,EAASP,GAAGC,GAAGE,OACjBI,EAASP,GAAGC,GAAGG,QAAS,GAI9B,OAAOG,EgBzDkBiK,CAAapB,EAAQ5E,QAAQhC,SAAU8H,GAK5D,OAJAlB,EAAQ5E,QAAQuD,YAAa,EAC7BqB,EAAQ5E,QAAQ/B,gBAAiB,EACjC2G,EAAQ5E,QAAQT,gBAAiB,OACjC0F,EAAQc,GAGV,GAAKnB,EAAQ5E,QAAQwF,gBAOd,CACL,IAAMS,EAAe9I,EAAqBxB,EAAMiJ,EAAQ5E,QAAQhC,SAAU8H,GAC1EG,EAAajK,GAAMC,GAAML,QAAS,EhB4Cb,SAACY,GAC1B,OAAQA,EAAK0J,MAAK,SAACC,GAAD,OAChBA,EAAMD,MAAK,SAACE,GACV,MAAqB,SAAdA,EAAKzK,OAAoByK,EAAKxK,agB9CjCyK,CAAYJ,KACdrB,EAAQ5E,QAAQT,gBAAiB,EACjCqF,EAAQ5E,QAAQuF,UAAW,GAE7BN,EAAQgB,OAd4B,CACpCrB,EAAQ5E,QAAQT,gBAAiB,EACjCqF,EAAQ5E,QAAQR,YAAa,EAC7BoF,EAAQ5E,QAAQwF,iBAAkB,EAClC,IAAMjJ,EAAY+J,gBAAM1B,EAAQ5E,QAAQhC,SAAW4G,EAAQ5E,QAAQoB,YAC7DmF,EAAgBjK,EAAkBX,EAAMY,EAAWqI,EAAQ5E,QAAQhC,SAAU8H,GACnFb,EAAQsB,MAuBNjD,EAAgB,WACpBsB,EAAQ5E,QAAQwF,iBAAkB,EAClCZ,EAAQ5E,QAAQuD,YAAa,EAC7BqB,EAAQ5E,QAAQ/B,gBAAiB,EACjC2G,EAAQ5E,QAAQuF,UAAW,EAC3BX,EAAQ5E,QAAQT,gBAAiB,EACjCqF,EAAQ5E,QAAQR,YAAa,EAC7B8F,EAAS,GACT,IAAMQ,EAAW3K,EAASyJ,EAAQ5E,QAAQhC,UAC1CiH,EAAQa,IAoDV,OACE,sBAAKzH,UAAU,YAAf,UACE,sBAAKA,UAAWC,KAAMkI,YAAtB,UACE,qBAAKnI,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,CACEkB,eAAgBqF,EAAQ5E,QAAQT,eAChCC,WAAYoF,EAAQ5E,QAAQR,WAC5BiB,kBAAmB,WACjB0E,GAAgBX,GAChBU,GAAe,IAEjBxE,kBAAmB,WACjBwE,GAAgBzD,GAChB0D,GAAe,IAEjB1F,cAAe,SAACpC,GACdiI,EAASjI,MAGb,cAAC,EAAD,CACEoE,YAAaA,EACbC,QAASA,EACThB,kBAAmB,kBAAMwE,GAAe,MAE1C,cAAC,GAAD,CACEuB,SAAU7B,EAAQ5E,QAAQhC,SAC1B0I,eAAgB9B,EAAQ5E,QAAQoB,WAChCoD,YAAaA,EACb/D,kBAAmB,kBAAM0E,GAAe,IACxCV,kBArCc,SAACrJ,EAAcuL,GACvC/B,EAAQ5E,QAAQhC,SAAW5C,EAC3BwJ,EAAQ5E,QAAQoB,WAAauF,EAC7BrD,IACA6B,GAAe,WAsCX,qBAAK9G,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBACEA,UAAWC,KAAM9B,KACjB8B,MAAO,CACLsI,SAAS,GAAD,OAAgC,GAA3BhC,EAAQ5E,QAAQhC,SAArB,OAHZ,UAMGxB,EAAKyE,KAAI,SAAC4F,EAAQ7K,GAAT,OACR6K,EAAO5F,KAAI,SAACpD,EAAS5B,GAAV,OACT,cAAC,EAAD,CAEE4B,QAASA,EACTE,gBAAiB,SAACU,GAAD,OAxHX,SACtBA,EACAzC,EACAC,GAEAwC,EAAEC,iBACF,IAAMoH,EAAWpJ,oBAAUF,GAC3BsJ,EAAS9J,GAAMC,GAAMJ,UAAYiK,EAAS9J,GAAMC,GAAMJ,SACtDoJ,EAAQa,GAgHgC/H,CAAgBU,EAAGzC,EAAMC,IACjD6B,WAAY,kBAAMA,EAAW9B,EAAMC,IACnCgC,eAAgB2G,EAAQ5E,QAAQ/B,eAChCD,SAAU4G,EAAQ5E,QAAQhC,UALrBH,EAAQtC,UAUnB,cAAC,EAAD,CACE+H,cAAe,kBAAMA,KACrBC,WAAYqB,EAAQ5E,QAAQuD,aAG7BqB,EAAQ5E,QAAQuD,YAAc,cAAC,EAAD,IAC9BqB,EAAQ5E,QAAQuF,UACf,cAAC,EAAD,CACExC,WAAYA,EACZC,iBAAkB,SAACvE,GAAD,OAAO2G,EAAc3G,EAAEqG,OAAOvC,QAChDU,aAAc,kBAnHT,WACnB,GAAKF,EAAL,CAIA,IAAM+D,EAAW,YAAOpF,GACxBoF,EAAYjK,SAAQ,SAACkK,GACnBA,EAAO1F,WAAY,KAGrB,IAAM2F,EAAgB3C,GAAY4C,WAChC,SAACb,GAAD,OAAUA,EAAKhC,cAAgBQ,EAAQ5E,QAAQhC,YAE3CkJ,EAAgB5C,GAAkB2C,WACtC,SAACb,GAAD,OAAUA,EAAKhC,cAAgBQ,EAAQ5E,QAAQoB,cAE3C+F,EAA2B,CAC/B5L,GAAI6L,cACJjG,KAAM4B,EACN1F,KAAM+C,EACNhF,KAAMiJ,GAAY2C,GAAe7C,WACjC/C,WAAYkD,GAAkB4C,GAAe/C,WAC7C9C,WAAW,GAEbgG,IAAMC,QAAQ,gBAAiB,CAC7BC,UAAW,IACXjJ,MAAO,CACLkJ,WAAY,UACZC,SAAU,OACV7I,MAAO,UACP8I,MAAO,QACPC,UAAW,WAGfjC,aAAakC,QAAQ,cAAehC,KAAKiC,UAAL,sBAAmBf,GAAnB,CAAgCK,MACpE9B,EAAW,GAAD,mBAAKyB,GAAL,CAAkBK,KAC5B/B,EAAc,IACdE,EAAS,GACThC,IACA4B,GAAe,QArCb4C,MAAM,eAiH0B7E,gBAOhC,cAAC,IAAD,Q,MCzNN8E,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BzN,M","file":"static/js/main.3f66bd74.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cellClose\":\"oneCell_cellClose__m61gg\",\"cellOpen\":\"oneCell_cellOpen__KyVHc\",\"cellOpenText\":\"oneCell_cellOpenText__2ZdKl\",\"image\":\"oneCell_image__35Ksa\",\"flag\":\"oneCell_flag__3MvgE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Winner\":\"winner_Winner__3pJ0r\",\"heading\":\"winner_heading__1ufod\",\"winner\":\"winner_winner__1ZYIX\",\"textAndInputWrapper\":\"winner_textAndInputWrapper__37-ql\",\"paragraph\":\"winner_paragraph__1gSNG\",\"inputWrapper\":\"winner_inputWrapper__Q6WtU\",\"input\":\"winner_input__3jViK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"results\":\"results_results__1g5GR\",\"active\":\"results_active__2P_qz\",\"heading\":\"results_heading__2xJkZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"table_table__3Ic_B\",\"tableTh\":\"table_tableTh__5STLs\",\"tableTr\":\"table_tableTr__1R_XL\",\"newResult\":\"table_newResult__1taCx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"restartButtonWrapper\":\"restart_restartButtonWrapper__1Cfen\",\"restartButton\":\"restart_restartButton__2PdD7\",\"image\":\"restart_image__3v9BK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameOver\":\"gameOver_gameOver__1XsNv\",\"gameOverText\":\"gameOver_gameOverText__2vaA9\",\"gameOverGG\":\"gameOver_gameOverGG__2hiM8\",\"gg\":\"gameOver_gg__3-fLQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"options\":\"options_options__1p9M2\",\"active\":\"options_active__3Y59H\",\"saveButton\":\"options_saveButton__1F8-3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"selectOption_label__1W8rG\",\"select\":\"selectOption_select__2WOnb\",\"option\":\"selectOption_option__33FrE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__16fGl\",\"title\":\"header_title__2wRP_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"minesweeper\":\"minesweeper_minesweeper__33qms\",\"grid\":\"minesweeper_grid__8o0BU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timer\":\"timer_timer__D3LhH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"optionResultButton\":\"button_optionResultButton__TvsXB\",\"cancelResultsOptions\":\"button_cancelResultsOptions__1O88B\",\"restartButton\":\"button_restartButton__1tss5\",\"saveButton\":\"button_saveButton__32Jqd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"input_input__3Da4F\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/* eslint-disable consistent-return */\r\n/* eslint-disable no-param-reassign */\r\n/* eslint-disable max-len */\r\nimport { cloneDeep, random } from 'lodash';\r\nimport type { Grid, Cell, CellText } from '../types/types';\r\n\r\nexport const drawGrid = (size: number) => {\r\n  let gridArr: Grid[] = [];\r\n  const gridArr2d: Grid[][] = [];\r\n  let id = 1;\r\n  for (let i = 0; i < size; i++) {\r\n    for (let j = 0; j < size; j++) {\r\n      gridArr.push({ id, cell: 0, isOpen: false, haveFlag: false });\r\n      id += 1;\r\n    }\r\n    gridArr2d.push(gridArr);\r\n    gridArr = [];\r\n  }\r\n  return gridArr2d;\r\n};\r\n\r\nexport const drawBombs = (cell: Cell, bombCount: number, grid: Grid[][]): Grid[][] => {\r\n  const gridCopy = cloneDeep(grid);\r\n  gridCopy.forEach((arr) => {\r\n    const bombCountEachRow = random(1, bombCount);\r\n\r\n    for (let i = 0; i < bombCountEachRow; i++) {\r\n      const randomIndex = random(arr.length - 1);\r\n      arr[randomIndex].cell = 'bomb';\r\n    }\r\n  });\r\n  gridCopy[cell.rowI][cell.colI].cell = 0;\r\n  return gridCopy;\r\n};\r\n\r\nexport const drawAroundFirstClicked = (cell: Cell, size: number, grid: Grid[][]): Grid[][] => {\r\n  const gridCopy = cloneDeep(grid);\r\n  const { rowI, colI } = cell;\r\n  for (let i = Math.max(rowI - 1, 0); i <= Math.min(rowI + 1, size - 1); i++) {\r\n    for (let j = Math.max(colI - 1, 0); j <= Math.min(colI + 1, size - 1); j++) {\r\n      if (gridCopy[i][j].cell === 'bomb') {\r\n        gridCopy[i][j].cell = 0;\r\n      }\r\n    }\r\n  }\r\n  return gridCopy;\r\n};\r\n\r\nexport const drawNumbers = (size: number, grid: Grid[][]): Grid[][] => {\r\n  const gridCopy = cloneDeep(grid);\r\n  for (let i = 0; i < size; i++) {\r\n    for (let j = 0; j < size; j++) {\r\n      if (gridCopy[i][j].cell === 0) {\r\n        const cell = { rowI: i, colI: j };\r\n        const count = countNumber(cell, size, gridCopy);\r\n        if (count === 0) {\r\n          gridCopy[i][j].cell = 'empty';\r\n        } else {\r\n          gridCopy[i][j].cell = count;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return gridCopy;\r\n};\r\n\r\nexport const countNumber = (cell: Cell, size: number, gridCopy: Grid[][]): number => {\r\n  const { rowI, colI } = cell;\r\n  let count = 0;\r\n  for (let i = Math.max(rowI - 1, 0); i <= Math.min(rowI + 1, size - 1); i++) {\r\n    for (let j = Math.max(colI - 1, 0); j <= Math.min(colI + 1, size - 1); j++) {\r\n      if (gridCopy[i][j].cell === 'bomb') count += 1;\r\n    }\r\n  }\r\n  return count;\r\n};\r\n\r\nexport const firstMoveDrawGrid =(cell: Cell, bombCount:number, size:number, grid: Grid[][]): Grid[][] => {\r\n  const copyGrid = cloneDeep(grid);\r\n  const gridWithBombs = drawBombs(cell, bombCount, copyGrid);\r\n  const gridEmtptyFirst = drawAroundFirstClicked(cell, size, gridWithBombs);\r\n  const gridWithNumber = drawNumbers(size, gridEmtptyFirst);\r\n  return adjacentCellsNoBombs(cell, size, gridWithNumber);\r\n};\r\n\r\nexport const adjacentCellsNoBombs = (cell: Cell, size: number, grid: Grid[][]): Grid[][] => {\r\n  const { rowI, colI } = cell;\r\n  const gridCopy = [...grid];\r\n  const count = countNumber(cell, size, gridCopy);\r\n  gridCopy[rowI][colI].isOpen = true;\r\n\r\n  if (count === 0) {\r\n    for (let i = Math.max(rowI - 1, 0); i <= Math.min(rowI + 1, size - 1); i++) {\r\n      for (let j = Math.max(colI - 1, 0); j <= Math.min(colI + 1, size - 1); j++) {\r\n        if (gridCopy[i][j].cell !== 'bomb' && gridCopy[i][j].isOpen === false) {\r\n          adjacentCellsNoBombs({ rowI: i, colI: j }, size, gridCopy);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return gridCopy;\r\n};\r\n\r\nexport const drawGameOver = (size: number, grid: Grid[][]): Grid[][] => {\r\n  const gridCopy = cloneDeep(grid);\r\n  for (let i = 0; i < size; i++) {\r\n    for (let j = 0; j < size; j++) {\r\n      if (gridCopy[i][j].cell === 'bomb') {\r\n        gridCopy[i][j].isOpen = true;\r\n      }\r\n    }\r\n  }\r\n  return gridCopy;\r\n};\r\n\r\nexport const checkWinner = (grid: Grid[][]): boolean => {\r\n  return !grid.some((array) =>\r\n    array.some((item) => {\r\n      return item.cell !== 'bomb' && !item.isOpen;\r\n    })\r\n  );\r\n};\r\n\r\nexport const timeConvertor = (time: number): string => {\r\n  const minutes: number = Math.floor(time / 60);\r\n  const seconds: number = time - minutes * 60;\r\n  let converted = '';\r\n  if (minutes > 0) {\r\n    converted += `${minutes}m ${seconds.toFixed(1)}s`;\r\n  } else {\r\n    converted += `${seconds.toFixed(1)}s`;\r\n  }\r\n  return converted;\r\n};\r\n\r\nexport const Color = (cell: CellText) => {\r\n  switch (cell) {\r\n    case 1:\r\n      return 'red';\r\n    case 2:\r\n      return 'blue';\r\n    case 3:\r\n      return 'green';\r\n    case 4:\r\n      return 'purple';\r\n    case 5:\r\n      return 'red';\r\n    case 6:\r\n      return 'yellow';\r\n    case 7:\r\n      return 'black';\r\n    case 8:\r\n      return 'grey';\r\n    default:\r\n      return '';\r\n  }\r\n};\r\n","export default __webpack_public_path__ + \"static/media/bomb.296a9e3a.png\";","import React, { FC } from 'react';\r\nimport type { typeOneCell } from '../../helpers/types/types';\r\nimport { Color } from '../../helpers/helperFunctions/helperFunctions';\r\nimport bomb from '../../assets/images/bomb.png';\r\nimport style from './oneCell.module.scss';\r\n\r\nconst OneCell: FC<typeOneCell> = ({\r\n  oneCell,\r\n  handleOpen,\r\n  hadleRightClick,\r\n  gridSize,\r\n  isGridDisabled,\r\n}) => {\r\n  const { isOpen, haveFlag, cell } = oneCell;\r\n\r\n  const cellStyle = {\r\n    flexBasis: `${100 / gridSize}%`,\r\n    paddingTop: `${100 / gridSize}%`,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isOpen ? (\r\n        <div className={style.cellOpen} onContextMenu={(e) => e.preventDefault()} style={cellStyle}>\r\n          <span className={`${style.cellOpenText} `} style={{ color: Color(cell) }}>\r\n            {cell > 0 && cell}\r\n            {cell === 'bomb' && <img className={style.image} src={bomb} alt=\"bomb\" />}\r\n          </span>\r\n        </div>\r\n      ) : (\r\n        <button\r\n          type=\"button\"\r\n          className={`${style.cellClose} ${haveFlag && style.flag}`}\r\n          style={cellStyle}\r\n          onClick={handleOpen}\r\n          disabled={isGridDisabled}\r\n          onContextMenu={(e) => hadleRightClick(e)}\r\n        >\r\n          {' '}\r\n        </button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OneCell;\r\n","import React, { FC, useState, useEffect, useRef } from 'react';\r\nimport { timeConvertor } from '../../helpers/helperFunctions/helperFunctions';\r\nimport style from './timer.module.scss';\r\nimport type { typeTimer } from '../../helpers/types/types';\r\n\r\nconst Timer: FC<typeTimer> = ({ isTimerStarted, resetTimer, getTimerValue }) => {\r\n  const [timeCount, setTimeCount] = useState(0);\r\n  const myInterval = useRef<NodeJS.Timeout>();\r\n\r\n  useEffect(() => {\r\n    if (resetTimer) {\r\n      setTimeCount(0);\r\n    }\r\n  }, [resetTimer]);\r\n\r\n  useEffect(() => {\r\n    if (isTimerStarted) {\r\n      myInterval.current = setInterval(() => {\r\n        setTimeCount((oldTimeCount) => oldTimeCount + 0.1);\r\n      }, 100);\r\n      return;\r\n    }\r\n    clearInterval(myInterval.current!);\r\n    getTimerValue(timeCount);\r\n  }, [isTimerStarted]);\r\n\r\n  return <div className={style.timer}>{timeConvertor(timeCount)}</div>;\r\n};\r\n\r\nexport default Timer;\r\n","import React, { FC } from 'react';\r\nimport style from './button.module.scss';\r\nimport type { TypeButton } from '../../helpers/types/types';\r\n\r\nconst Button: FC<TypeButton> = ({ handleClick, className='button', disabled, label }) => {\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      onClick={handleClick}\r\n      className={style[`${className}`]}\r\n      disabled={disabled}\r\n    >\r\n      {label}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { FC } from 'react';\r\nimport style from './header.module.scss';\r\nimport Timer from '../timer/timer';\r\nimport Button from '../../commonComponents/button/button';\r\nimport type { typeHeader } from '../../helpers/types/types';\r\n\r\nconst Header: FC<typeHeader> = ({\r\n  isTimerStarted,\r\n  resetTimer,\r\n  getTimerValue,\r\n  handleShowOptions,\r\n  handleShowResults,\r\n}) => {\r\n  return (\r\n    <>\r\n      <div className={style.header}>\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-12\">\r\n            <h3 className={style.title}>MINESWEEPER</h3>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-3\">\r\n            <Button\r\n              handleClick={handleShowOptions}\r\n              className=\"optionResultButton\"\r\n              label=\"Options\"\r\n            />\r\n          </div>\r\n          <div className=\"col-xs-6\">\r\n            <Timer\r\n              isTimerStarted={isTimerStarted}\r\n              resetTimer={resetTimer}\r\n              getTimerValue={getTimerValue}\r\n            />\r\n          </div>\r\n          <div className=\"col-xs-3\">\r\n            <Button\r\n              handleClick={handleShowResults}\r\n              className=\"optionResultButton\"\r\n              label=\"Results\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { FC } from 'react';\r\nimport style from './table.module.scss';\r\nimport { timeConvertor } from '../../helpers/helperFunctions/helperFunctions';\r\nimport type { TypeTable } from '../../helpers/types/types';\r\n\r\nconst Table: FC<TypeTable> = ({ tableData }) => {\r\n  return (\r\n    <table className={style.table}>\r\n      <thead>\r\n        <tr className={style.tableTh}>\r\n          <th>#</th>\r\n          <th>name</th>\r\n          <th>time</th>\r\n          <th>grid size</th>\r\n          <th>difficulty</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {tableData.map(({ id, name, time, size, difficulty, newResult }, index) => (\r\n          <tr key={id} className={`${style.tableTr} ${newResult && style.newResult}`}> \r\n            <td>{index + 1}</td>\r\n            <td>{name.substring(0, 12)}</td>\r\n            <td>{timeConvertor(time)}</td>\r\n            <td>{size}</td>\r\n            <td>{difficulty}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { FC } from 'react';\r\nimport style from './results.module.scss';\r\nimport Table from '../../commonComponents/table/table';\r\nimport type { typeResults } from '../../helpers/types/types';\r\nimport Button from '../../commonComponents/button/button';\r\n\r\nconst Results: FC<typeResults> = ({ showResults, results, handleShowResults }) => {\r\n  results.sort((a, b) => a.time - b.time).splice(10);\r\n\r\n  return (\r\n    <div className={`${style.results} ${showResults && style.active}`} data-testid=\"results\">\r\n      <Button handleClick={handleShowResults} className=\"cancelResultsOptions\" label=\"X\" />\r\n      {results.length > 0 ? (\r\n        <>\r\n          <h5 className={style.heading}>RESULTS</h5>\r\n          <Table tableData={results} />\r\n        </>\r\n      ) : (\r\n        <h5 className={style.heading}>Results empty...</h5>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Results;\r\n","import React from 'react';\r\nimport style from './gameOver.module.scss';\r\n\r\nconst GameOver = () => {\r\n  return (\r\n    <div className={style.gameOver}>\r\n      <span className={style.gameOverText}>Better luck next time!</span>\r\n      <span className={style.gameOverGG}> GG</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameOver;\r\n","import React, { FC, useRef, useEffect } from 'react';\r\nimport style from './input.module.scss';\r\nimport type { TypeInput } from '../../helpers/types/types';\r\n\r\nconst Input: FC<TypeInput> = ({\r\n  value,\r\n  placeholder='...',\r\n  className = 'input',\r\n  focus = false,\r\n  handleInputName,\r\n}) => {\r\n  const inputEl = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    focus &&\r\n      inputEl.current?.focus();\r\n  }, []);\r\n\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      ref={inputEl}\r\n      placeholder={placeholder}\r\n      className={style[`${className}`]}\r\n      value={value}\r\n      onChange={(e) => handleInputName(e)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React, { FC } from 'react';\r\nimport style from './winner.module.scss';\r\nimport type { typeWinner } from '../../helpers/types/types';\r\nimport Input from '../../commonComponents/input/input';\r\nimport Button from '../../commonComponents/button/button';\r\n\r\nconst Winner: FC<typeWinner> = ({ winnerName, handleWinnerName, handleWinner }) => {\r\n  return (\r\n    <div className={style.Winner}>\r\n      <h1 className={style.heading}>Winner!!!</h1>\r\n      <div className={style.textAndInputWrapper}>\r\n        <p className={style.paragraph}>enter your name to save results</p>\r\n        <div className={style.inputWrapper}>\r\n          <Input\r\n            placeholder=\"enter name...\"\r\n            value={winnerName}\r\n            className=\"input\"\r\n            handleInputName={(e) => handleWinnerName(e)}\r\n            focus\r\n          />\r\n          <Button handleClick={handleWinner} className=\"saveButton\" label=\"save\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Winner;\r\n","export default __webpack_public_path__ + \"static/media/sad.2a18dba4.png\";","export default __webpack_public_path__ + \"static/media/happy.a49e600b.png\";","import React, { FC } from 'react';\r\nimport style from './restart.module.scss';\r\nimport type { typeRestart } from '../../helpers/types/types';\r\nimport Button from '../../commonComponents/button/button';\r\nimport sad from '../../assets/images/sad.png';\r\nimport happy from '../../assets/images/happy.png';\r\n\r\n\r\nconst Restart: FC<typeRestart> = ({ handleRestart, isGameOver }) => {\r\n  return (\r\n    <div className={style.restartButtonWrapper}>\r\n      <div className={style.restartButton}>\r\n        {isGameOver ? (\r\n          <img\r\n            src={sad}\r\n            alt=\"sad smile\"\r\n            className={style.image}\r\n          />\r\n        ) : (\r\n          <img\r\n            src={happy}\r\n            alt=\"happy smile\"\r\n            className={style.image}\r\n          />\r\n        )}\r\n        <Button handleClick={handleRestart} className=\"restartButton\" label=\"\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Restart;\r\n","/* eslint-disable max-len */\r\nimport React, { FC } from 'react';\r\nimport style from './selectOption.module.scss';\r\nimport type { typeSelectOption } from '../../helpers/types/types';\r\n\r\nconst SelectOption: FC<typeSelectOption> = ({\r\n  value,\r\n  name,\r\n  label,\r\n  optionArr,\r\n  classNameLabel= 'label',\r\n  classNameSelect = 'select',\r\n  classNameOption='option',\r\n  onChangeHandler,\r\n}) => {\r\n  return (\r\n    <label htmlFor={name} className={style[`${classNameLabel}`]}>\r\n      {label}{' '}\r\n      <select\r\n        id={name}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChangeHandler}\r\n        className={style[`${classNameSelect}`]}\r\n      >\r\n        {optionArr.map(({ optionName, optionValue }) => (\r\n          <option key={optionName} value={optionValue} className={style[`${classNameOption}`]}>\r\n            {optionName}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default SelectOption;\r\n","import React, { FC, useState } from 'react';\r\nimport style from './options.module.scss';\r\nimport SelectOption from '../../commonComponents/selectOption/selectOption';\r\nimport type { typeOptions, Option } from '../../helpers/types/types';\r\nimport Button from '../../commonComponents/button/button';\r\n\r\nexport const gameSizeArr: Option[] = [\r\n  { optionName: ' small', optionValue: 10 },\r\n  { optionName: 'medium', optionValue: 15 },\r\n  { optionName: 'large', optionValue: 20 },\r\n];\r\n\r\nexport const gameDifficultyArr: Option[] = [\r\n  { optionName: 'easy', optionValue: 10 },\r\n  { optionName: 'medium', optionValue: 3 },\r\n  { optionName: 'hard', optionValue: 2 },\r\n];\r\n\r\nexport const Options: FC<typeOptions> = ({ showOptions, handleShowOptions, saveOptionChanges }) => {\r\n  const [gridSize, setGridSize] = useState(10);\r\n  const [difficulty, setDifficulty] = useState(10);\r\n\r\n  return (\r\n    <div className={`${style.options} ${showOptions && style.active}`}>\r\n      <Button handleClick={handleShowOptions} className=\"cancelResultsOptions\" label=\"X\" />\r\n      <>\r\n        <SelectOption\r\n          value={gridSize}\r\n          label=\"Choose game size\"\r\n          name=\"gameSize\"\r\n          onChangeHandler={(e) => setGridSize(parseInt(e.target.value, 10))}\r\n          optionArr={gameSizeArr}\r\n          classNameLabel=\"label\"\r\n          classNameSelect=\"select\"\r\n          classNameOption=\"option\"\r\n        />\r\n        <SelectOption\r\n          value={difficulty}\r\n          name=\"gameDifficulty\"\r\n          label=\"Choose difficulty\"\r\n          onChangeHandler={(e) => setDifficulty(parseInt(e.target.value, 10))}\r\n          optionArr={gameDifficultyArr}\r\n          classNameLabel=\"label\"\r\n          classNameSelect=\"select\"\r\n          classNameOption=\"option\"\r\n        />\r\n      </>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => saveOptionChanges(gridSize, difficulty)}\r\n        className={style.saveButton}\r\n      >\r\n        {' '}\r\n        Save\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","/* eslint-disable no-param-reassign */\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { cloneDeep, round } from 'lodash';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport OneCell from '../oneCell/oneCell';\r\nimport Header from '../header/header';\r\nimport Results from '../results/results';\r\nimport GameOver from '../gameOver/gameOver';\r\nimport Winner from '../winner/winner';\r\nimport Restart from '../restart/restart';\r\nimport { Options, gameSizeArr, gameDifficultyArr } from '../options/options';\r\nimport type { typeResultObj } from '../../helpers/types/types';\r\nimport {\r\n  drawGrid,\r\n  adjacentCellsNoBombs,\r\n  drawGameOver,\r\n  checkWinner,\r\n  firstMoveDrawGrid,\r\n} from '../../helpers/helperFunctions/helperFunctions';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport style from './minesweeper.module.scss';\r\n\r\nexport const Minesweeper = () => {\r\n  const [grid, setGrid] = useState(drawGrid(10));\r\n  const [showResults, setShowResults] = useState(false);\r\n  const [showOptions, setShowOptions] = useState(false);\r\n  const [winnerName, setWinnerName] = useState('');\r\n  const [results, setResults] = useState<typeResultObj[]>([]);\r\n  const [timer, setTimer] = useState(0);\r\n\r\n  const options = useRef({\r\n    gridSize: 10,\r\n    difficulty: 10,\r\n    isGameOver: false,\r\n    isWinner: false,\r\n    isFirstMoveDone: false,\r\n    isTimerStarted: false,\r\n    isGridDisabled: false,\r\n    resetTimer: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const minesweeperStorage = localStorage.getItem('minesweeper');\r\n    minesweeperStorage && setResults(JSON.parse(minesweeperStorage));\r\n  }, []);\r\n\r\n  const handleOpen = (rowI: number, colI: number) => {\r\n    const copyGrid = cloneDeep(grid);\r\n    const cell = { rowI, colI };\r\n\r\n    if (grid[rowI][colI].haveFlag) {\r\n      return;\r\n    }\r\n    if (grid[rowI][colI].cell === 'bomb') {\r\n      const gameOverGrid = drawGameOver(options.current.gridSize, copyGrid);\r\n      options.current.isGameOver = true;\r\n      options.current.isGridDisabled = true;\r\n      options.current.isTimerStarted = false;\r\n      setGrid(gameOverGrid);\r\n      return;\r\n    }\r\n    if (!options.current.isFirstMoveDone) {\r\n      options.current.isTimerStarted = true;\r\n      options.current.resetTimer = false;\r\n      options.current.isFirstMoveDone = true;\r\n      const bombCount = round(options.current.gridSize / options.current.difficulty);\r\n      const gridFirstMove = firstMoveDrawGrid(cell, bombCount, options.current.gridSize, copyGrid);\r\n      setGrid(gridFirstMove);\r\n    } else {\r\n      const gridAdjacent = adjacentCellsNoBombs(cell, options.current.gridSize, copyGrid);\r\n      gridAdjacent[rowI][colI].isOpen = true;\r\n      if (checkWinner(gridAdjacent)) {\r\n        options.current.isTimerStarted = false;\r\n        options.current.isWinner = true;\r\n      }\r\n      setGrid(gridAdjacent);\r\n    }\r\n  };\r\n\r\n  const hadleRightClick = (\r\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\r\n    rowI: number,\r\n    colI: number\r\n  ) => {\r\n    e.preventDefault();\r\n    const copyGrid = cloneDeep(grid);\r\n    copyGrid[rowI][colI].haveFlag = !copyGrid[rowI][colI].haveFlag;\r\n    setGrid(copyGrid);\r\n  };\r\n\r\n  const handleRestart = () => {\r\n    options.current.isFirstMoveDone = false;\r\n    options.current.isGameOver = false;\r\n    options.current.isGridDisabled = false;\r\n    options.current.isWinner = false;\r\n    options.current.isTimerStarted = false;\r\n    options.current.resetTimer = true;\r\n    setTimer(0);\r\n    const copyGrid = drawGrid(options.current.gridSize);\r\n    setGrid(copyGrid);\r\n  };\r\n\r\n  const handleWinner = () => {\r\n    if (!winnerName) {\r\n      alert('enter name!');\r\n      return;\r\n    }\r\n    const copyResults = [...results];\r\n    copyResults.forEach((result) => {\r\n      result.newResult = false;\r\n    });\r\n\r\n    const findSizeIndex = gameSizeArr.findIndex(\r\n      (item) => item.optionValue === options.current.gridSize\r\n    );\r\n    const findDiffIndex = gameDifficultyArr.findIndex(\r\n      (item) => item.optionValue === options.current.difficulty\r\n    );\r\n    const newWinner: typeResultObj = {\r\n      id: uuidv4(),\r\n      name: winnerName,\r\n      time: timer,\r\n      size: gameSizeArr[findSizeIndex].optionName,\r\n      difficulty: gameDifficultyArr[findDiffIndex].optionName,\r\n      newResult: true,\r\n    };\r\n    toast.success('Result added!', {\r\n      autoClose: 5000,\r\n      style: {\r\n        background: '#e07a5f',\r\n        fontSize: '40px',\r\n        color: '#3d405b',\r\n        width: '400px',\r\n        minHeight: '100px',\r\n      },\r\n    });\r\n    localStorage.setItem('minesweeper', JSON.stringify([...copyResults, newWinner]));\r\n    setResults([...copyResults, newWinner]);\r\n    setWinnerName('');\r\n    setTimer(0);\r\n    handleRestart();\r\n    setShowResults(true);\r\n  };\r\n\r\n  const saveOptionChanges = (size: number, diff: number) => {\r\n    options.current.gridSize = size;\r\n    options.current.difficulty = diff;\r\n    handleRestart();\r\n    setShowOptions(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className={style.minesweeper}>\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-12\">\r\n            <Header\r\n              isTimerStarted={options.current.isTimerStarted}\r\n              resetTimer={options.current.resetTimer}\r\n              handleShowOptions={() => {\r\n                setShowOptions(!showOptions);\r\n                setShowResults(false);\r\n              }}\r\n              handleShowResults={() => {\r\n                setShowResults(!showResults);\r\n                setShowOptions(false);\r\n              }}\r\n              getTimerValue={(time: number) => {\r\n                setTimer(time);\r\n              }}\r\n            />\r\n            <Results\r\n              showResults={showResults}\r\n              results={results}\r\n              handleShowResults={() => setShowResults(false)}\r\n            />\r\n            <Options\r\n              gameSize={options.current.gridSize}\r\n              gameDifficulty={options.current.difficulty}\r\n              showOptions={showOptions}\r\n              handleShowOptions={() => setShowOptions(false)}\r\n              saveOptionChanges={saveOptionChanges}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-12\">\r\n            <div\r\n              className={style.grid}\r\n              style={{\r\n                maxWidth: `${options.current.gridSize * 25}px`,\r\n              }}\r\n            >\r\n              {grid.map((RowArr, rowI) =>\r\n                RowArr.map((oneCell, colI) => (\r\n                  <OneCell\r\n                    key={oneCell.id}\r\n                    oneCell={oneCell}\r\n                    hadleRightClick={(e) => hadleRightClick(e, rowI, colI)}\r\n                    handleOpen={() => handleOpen(rowI, colI)}\r\n                    isGridDisabled={options.current.isGridDisabled}\r\n                    gridSize={options.current.gridSize}\r\n                  />\r\n                ))\r\n              )}\r\n\r\n              <Restart\r\n                handleRestart={() => handleRestart()}\r\n                isGameOver={options.current.isGameOver}\r\n              />\r\n\r\n              {options.current.isGameOver && <GameOver />}\r\n              {options.current.isWinner && (\r\n                <Winner\r\n                  winnerName={winnerName}\r\n                  handleWinnerName={(e) => setWinnerName(e.target.value)}\r\n                  handleWinner={() => handleWinner()}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Minesweeper;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { Minesweeper } from './components/minesweeper/minesweeper';\nimport './styles/index.scss';\n// import 'flexboxgrid';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Minesweeper />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}