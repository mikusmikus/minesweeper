{"version":3,"sources":["components/header/header.module.scss","components/options/options.module.scss","components/results/results.module.scss","components/winner/winner.module.scss","components/oneCell/oneCell.module.scss","components/gameOver/gameOver.module.scss","components/restart/restart.module.scss","components/timer/timer.module.scss","components/minesweeper/minesweeper.module.scss","helpers/helperFunctions/helperFunctions.tsx","images/bomb.png","components/oneCell/oneCell.tsx","components/options/options.tsx","components/timer/timer.tsx","components/header/header.tsx","components/results/results.tsx","components/gameOver/gameOver.tsx","components/winner/winner.tsx","components/restart/restart.tsx","helpers/optionArrays/optionArrays.tsx","components/minesweeper/minesweeper.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","drawGrid","size","gridArr","gridArr2d","id","i","j","push","cell","isOpen","haveFlag","countNumber","gridCopy","rowI","colI","count","Math","max","min","adjacentCellsNoBombs","grid","timeConvertor","time","minutes","floor","seconds","converted","toFixed","Color","OneCell","oneCell","handleOpen","hadleRightClick","gridSize","isGridDisabled","cellStyle","flexBasis","paddingTop","className","style","cellOpen","onContextMenu","e","preventDefault","cellOpenText","color","image","src","bomb","alt","type","cellClose","flag","onClick","disabled","Options","gameSize","gameDifficulty","gameSizeArr","gameDifficultyArr","handleGridSizeChange","handleDifficultyChange","options","htmlFor","label","name","value","onChange","select","map","option","difficulty","Timer","isTimerStarted","resetTimer","getTimerValue","useState","timeCount","setTimeCount","myInterval","useRef","useEffect","current","setInterval","oldTimeCount","clearInterval","timerWrapper","timer","Header","isGameStarted","showResults","handleShowResults","handleStart","header","button","startFinish","triangleWrapper","triangle","triangleButton","Results","results","sort","a","b","splice","active","heading","table","tableTh","index","tableTr","substring","GameOver","gameOver","gameOverText","gameOverGG","Winner","winnerName","handleWinnerName","handleWinner","inputEl","focus","inputWrapper","placeholder","input","ref","Restart","handleRestart","GAME_SIZE","GAME_DIFICULTY","isGameOver","isWinner","isFirstMoveDone","Minesweeper","setGridSize","setDifficulty","setGrid","setShowResults","setWinnerName","setResults","setTimer","minesweeperStorage","localStorage","getItem","JSON","parse","copyGrid","cloneDeep","gameOverGrid","drawGameOver","gridAdjacent","some","array","item","checkWinner","gridWithBombs","bombCount","forEach","arr","bombCountEachRow","random","length","drawBombs","round","gridEmtptyFirst","drawAroundFirstClicked","gridWithNumber","drawNumbers","parseInt","target","minesweeper","maxWidth","RowArr","index1","index2","copyResults","findSizeIndex","findIndex","findDiffIndex","newWinner","uuidv4","setItem","stringify","toast","position","autoClose","closeOnClick","draggable","alert","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7377ab8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__16fGl\",\"button\":\"header_button__3EYHo\",\"startFinish\":\"header_startFinish__1xrhN\",\"triangleWrapper\":\"header_triangleWrapper__X11te\",\"triangle\":\"header_triangle__q_44v\",\"triangleButton\":\"header_triangleButton__27PwV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"options\":\"options_options__1p9M2\",\"label\":\"options_label__2_Fyj\",\"select\":\"options_select__2lHFD\",\"option\":\"options_option__2jmWP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"results\":\"results_results__1g5GR\",\"active\":\"results_active__2P_qz\",\"table\":\"results_table__2yg4S\",\"tableTh\":\"results_tableTh__1RguN\",\"tableTr\":\"results_tableTr__3-ojH\",\"heading\":\"results_heading__2xJkZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Winner\":\"winner_Winner__3pJ0r\",\"heading\":\"winner_heading__1ufod\",\"winner\":\"winner_winner__1ZYIX\",\"label\":\"winner_label__3Nyd-\",\"inputWrapper\":\"winner_inputWrapper__Q6WtU\",\"input\":\"winner_input__3jViK\",\"button\":\"winner_button__3yynH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cellClose\":\"oneCell_cellClose__m61gg\",\"cellOpen\":\"oneCell_cellOpen__KyVHc\",\"cellOpenText\":\"oneCell_cellOpenText__2ZdKl\",\"image\":\"oneCell_image__35Ksa\",\"flag\":\"oneCell_flag__3MvgE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameOver\":\"gameOver_gameOver__1XsNv\",\"gameOverText\":\"gameOver_gameOverText__2vaA9\",\"gameOverGG\":\"gameOver_gameOverGG__2hiM8\",\"gg\":\"gameOver_gg__3-fLQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"triangleWrapper\":\"restart_triangleWrapper__VdthC\",\"triangle\":\"restart_triangle__1KZLn\",\"button\":\"restart_button__3bZr1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timerWrapper\":\"timer_timerWrapper__1Mm3O\",\"timer\":\"timer_timer__D3LhH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"minesweeper\":\"minesweeper_minesweeper__33qms\"};","/* eslint-disable consistent-return */\r\n/* eslint-disable no-param-reassign */\r\n/* eslint-disable max-len */\r\nimport { cloneDeep, random, sampleSize } from 'lodash';\r\nimport type { Grid, Cell, CellText } from '../types/types';\r\n\r\nexport const drawGrid = (size: number) => {\r\n  let gridArr: Grid[] = [];\r\n  const gridArr2d: Grid[][] = [];\r\n  let id = 1;\r\n  for (let i = 0; i < size; i++) {\r\n    for (let j = 0; j < size; j++) {\r\n      gridArr.push({ id, cell: 0, isOpen: false, haveFlag: false });\r\n      id += 1;\r\n    }\r\n    gridArr2d.push(gridArr);\r\n    gridArr = [];\r\n  }\r\n  return gridArr2d;\r\n};\r\n\r\nexport const drawBombs = (cell: Cell, bombCount: number, grid: Grid[][]): Grid[][] => {\r\n  const gridCopy = cloneDeep(grid);\r\n  gridCopy.forEach((arr) => {\r\n    const bombCountEachRow = random(1, bombCount);\r\n    for (let i = 0; i < bombCountEachRow; i++) {\r\n      const randomIndex = random(arr.length - 1);\r\n      arr[randomIndex].cell = 'bomb';\r\n    }\r\n    // const CellsWhereBomb = sampleSize(arr, bombCountEachRow);\r\n    // for (let i = 0; i < randomNumber; i++) {\r\n    //   randomCells[i].cell = 'bomb';\r\n    // }\r\n  });\r\n  gridCopy[cell.rowI][cell.colI].cell = 0;\r\n  return gridCopy;\r\n};\r\n\r\nexport const drawAroundFirstClicked = (cell: Cell, size: number, grid: Grid[][]): Grid[][] => {\r\n  const gridCopy = cloneDeep(grid);\r\n  const { rowI, colI } = cell;\r\n  for (let i = Math.max(rowI - 1, 0); i <= Math.min(rowI + 1, size - 1); i++) {\r\n    for (let j = Math.max(colI - 1, 0); j <= Math.min(colI + 1, size - 1); j++) {\r\n      if (gridCopy[i][j].cell === 'bomb') {\r\n        gridCopy[i][j].cell = 0;\r\n      }\r\n    }\r\n  }\r\n  return gridCopy;\r\n};\r\n\r\nexport const drawNumbers = (size: number, grid: Grid[][]): Grid[][] => {\r\n  const gridCopy = cloneDeep(grid);\r\n  for (let i = 0; i < size; i++) {\r\n    for (let j = 0; j < size; j++) {\r\n      if (gridCopy[i][j].cell === 0) {\r\n        const cell = { rowI: i, colI: j };\r\n        const count = countNumber(cell, size, gridCopy);\r\n        if (count === 0) {\r\n          gridCopy[i][j].cell = 'empty';\r\n        } else {\r\n          gridCopy[i][j].cell = count;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return gridCopy;\r\n};\r\n\r\nexport const countNumber = (cell: Cell, size: number, gridCopy: Grid[][]): number => {\r\n  const { rowI, colI } = cell;\r\n  let count = 0;\r\n  for (let i = Math.max(rowI - 1, 0); i <= Math.min(rowI + 1, size - 1); i++) {\r\n    for (let j = Math.max(colI - 1, 0); j <= Math.min(colI + 1, size - 1); j++) {\r\n      if (gridCopy[i][j].cell === 'bomb') count += 1;\r\n    }\r\n  }\r\n  return count;\r\n};\r\n\r\nexport const adjacentCellsNoBombs = (cell: Cell, size: number, grid: Grid[][]): Grid[][] => {\r\n  const { rowI, colI } = cell;\r\n  const gridCopy = [...grid];\r\n  const count = countNumber(cell, size, gridCopy);\r\n  gridCopy[rowI][colI].isOpen = true;\r\n\r\n  if (count === 0) {\r\n    for (let i = Math.max(rowI - 1, 0); i <= Math.min(rowI + 1, size - 1); i++) {\r\n      for (let j = Math.max(colI - 1, 0); j <= Math.min(colI + 1, size - 1); j++) {\r\n        if (gridCopy[i][j].cell !== 'bomb' && gridCopy[i][j].isOpen === false) {\r\n          adjacentCellsNoBombs({ rowI: i, colI: j }, size, gridCopy);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return gridCopy;\r\n};\r\n\r\nexport const drawGameOver = (size: number, grid: Grid[][]): Grid[][] => {\r\n  const gridCopy = cloneDeep(grid);\r\n  for (let i = 0; i < size; i++) {\r\n    for (let j = 0; j < size; j++) {\r\n      if (gridCopy[i][j].cell === 'bomb') {\r\n        gridCopy[i][j].isOpen = true;\r\n      }\r\n    }\r\n  }\r\n  return gridCopy;\r\n};\r\n\r\nexport const checkWinner = (grid: Grid[][]): boolean => {\r\n  return !grid.some((array) =>\r\n    array.some((item) => {\r\n      return item.cell !== 'bomb' && !item.isOpen;\r\n    })\r\n  );\r\n};\r\n\r\nexport const timeConvertor = (time: number): string => {\r\n  const minutes: number = Math.floor(time / 60);\r\n  const seconds: number = time - minutes * 60;\r\n  let converted = '';\r\n  if (minutes > 0) {\r\n    converted += `${minutes}m ${seconds.toFixed(1)}s`;\r\n  } else {\r\n    converted += `${seconds.toFixed(1)}s`;\r\n  }\r\n  return converted;\r\n};\r\n\r\nexport const Color = (cell: CellText) => {\r\n  switch (cell) {\r\n    case 1:\r\n      return 'red';\r\n    case 2:\r\n      return 'blue';\r\n    case 3:\r\n      return 'green';\r\n    case 4:\r\n      return 'purple';\r\n    case 5:\r\n      return 'red';\r\n    case 6:\r\n      return 'yellow';\r\n    case 7:\r\n      return 'black';\r\n    case 8:\r\n      return 'grey';\r\n    default:\r\n      return '';\r\n  }\r\n};\r\n\r\n// export const findRandomObjects = (grid: Grid[][], randomNumber: number) => {\r\n//   const copyGrid = [...grid];\r\n//   copyGrid.forEach((arr) => {\r\n//     // const randomCells = sampleSize(arr, randomNumber);\r\n//     for (let i = 0; i < randomNumber; i++) {\r\n//       const index = random(arr.length - 1);\r\n//       arr[index].cell = 'bomb';\r\n//     }\r\n//   });\r\n//   return copyGrid;\r\n// };\r\n","export default __webpack_public_path__ + \"static/media/bomb.296a9e3a.png\";","/* eslint-disable max-len */\r\nimport React, { FC } from 'react';\r\nimport type { typeOneCell } from '../../helpers/types/types';\r\nimport { Color } from '../../helpers/helperFunctions/helperFunctions';\r\nimport style from './oneCell.module.scss';\r\nimport bomb from '../../images/bomb.png';\r\n\r\nconst OneCell: FC<typeOneCell> = ({\r\n  oneCell,\r\n  handleOpen,\r\n  hadleRightClick,\r\n  gridSize,\r\n  isGridDisabled,\r\n}) => {\r\n  const { isOpen, haveFlag, cell } = oneCell;\r\n\r\n  const cellStyle = {\r\n    flexBasis: `${100 / gridSize}%`,\r\n    paddingTop: `${100 / gridSize}%`,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isOpen ? (\r\n        <div className={style.cellOpen} onContextMenu={(e) => e.preventDefault()} style={cellStyle}>\r\n          <span className={`${style.cellOpenText} `} style={{ color: Color(cell) }}>\r\n            {cell > 0 && cell}\r\n            {cell === 'bomb' && <img className={style.image} src={bomb} alt=\"bomb\" />}\r\n          </span>\r\n        </div>\r\n      ) : (\r\n        <button\r\n          type=\"button\"\r\n          className={`${style.cellClose} ${haveFlag && style.flag}`}\r\n          style={cellStyle}\r\n          onClick={handleOpen}\r\n          disabled={isGridDisabled}\r\n          onContextMenu={(e) => hadleRightClick(e)}\r\n        >\r\n          {' '}\r\n        </button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OneCell;\r\n","import React, { FC } from 'react';\r\nimport style from './options.module.scss';\r\nimport type { typeOptions } from '../../helpers/types/types';\r\n\r\nconst Options: FC<typeOptions> = ({\r\n  gameSize,\r\n  gameDifficulty,\r\n  gameSizeArr,\r\n  gameDifficultyArr,\r\n  handleGridSizeChange,\r\n  handleDifficultyChange,\r\n}) => {\r\n  return (\r\n    <div className={style.options}>\r\n      <label htmlFor=\"gameSize\" className={style.label}>\r\n        Choose game size{' '}\r\n        <select\r\n          id=\"gameSize\"\r\n          name=\"gameSize\"\r\n          value={gameSize}\r\n          onChange={handleGridSizeChange}\r\n          className={style.select}\r\n        >\r\n          {gameSizeArr.map(({ name, size }) => (\r\n            <option key={name} value={size} className={style.option}>\r\n              {name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </label>\r\n      <label htmlFor=\"difficulty\" className={style.label}>\r\n        Choose difficulty{' '}\r\n        <select\r\n          id=\"difficulty\"\r\n          name=\"difficulty\"\r\n          value={gameDifficulty}\r\n          onChange={handleDifficultyChange}\r\n          className={style.select}\r\n        >\r\n          {gameDifficultyArr.map(({ name, difficulty }) => (\r\n            <option key={name} value={difficulty} className={style.option}>\r\n              {name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Options;\r\n","import React, { FC, useState, useEffect, useRef } from 'react';\r\nimport { timeConvertor } from '../../helpers/helperFunctions/helperFunctions';\r\nimport style from './timer.module.scss';\r\nimport type { typeTimer } from '../../helpers/types/types';\r\n\r\nconst Timer: FC<typeTimer> = ({ isTimerStarted, resetTimer, getTimerValue }) => {\r\n  const [timeCount, setTimeCount] = useState(0);\r\n  const myInterval = useRef<NodeJS.Timeout>();\r\n\r\n  useEffect(() => {\r\n    if (resetTimer) {\r\n      setTimeCount(0);\r\n    }\r\n  }, [resetTimer]);\r\n\r\n  useEffect(() => {\r\n    if (isTimerStarted) {\r\n      myInterval.current = setInterval(() => {\r\n        setTimeCount((oldTimeCount) => oldTimeCount + 0.1);\r\n      }, 100);\r\n    } else {\r\n      clearInterval(myInterval.current!);\r\n      getTimerValue(timeCount);\r\n    }\r\n  }, [isTimerStarted]);\r\n\r\n  return (\r\n    <div className={style.timerWrapper}>\r\n      <span className={style.timer}>{timeConvertor(timeCount)}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n","import React, { FC } from 'react';\r\nimport style from './header.module.scss';\r\nimport Options from '../options/options';\r\nimport Timer from '../timer/timer';\r\nimport type { typeHeader } from '../../helpers/types/types';\r\n\r\nconst Header: FC<typeHeader> = ({\r\n  isGameStarted,\r\n  isTimerStarted,\r\n  resetTimer,\r\n  showResults,\r\n  gameSizeArr,\r\n  gameSize,\r\n  gameDifficulty,\r\n  gameDifficultyArr,\r\n  getTimerValue,\r\n  handleShowResults,\r\n  handleStart,\r\n  handleGridSizeChange,\r\n  handleDifficultyChange,\r\n}) => {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className={style.header}>\r\n        {!isGameStarted ? (\r\n          <>\r\n            <div className=\"col-xs-4\">\r\n              <div className={style.startFinish}>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={handleStart}\r\n                  className={style.button}\r\n                  disabled={showResults}\r\n                >\r\n                  Start\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-xs-8\">\r\n              <Options\r\n                gameSize={gameSize}\r\n                gameDifficulty={gameDifficulty}\r\n                handleGridSizeChange={handleGridSizeChange}\r\n                handleDifficultyChange={handleDifficultyChange}\r\n                gameSizeArr={gameSizeArr}\r\n                gameDifficultyArr={gameDifficultyArr}\r\n              />\r\n            </div>\r\n            <div className={style.triangleWrapper}>\r\n              <span className={style.triangle}>\r\n                <button type=\"button\" onClick={handleShowResults} className={style.triangleButton}>\r\n                  {showResults ? 'close' : 'results'}\r\n                </button>\r\n              </span>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"col-xs-4\">\r\n              <button type=\"button\" onClick={handleStart} className={style.button}>\r\n                END\r\n              </button>\r\n            </div>\r\n            <div className=\"col-xs-6 col-xs-offset-2\">\r\n              <Timer\r\n                isTimerStarted={isTimerStarted}\r\n                resetTimer={resetTimer}\r\n                getTimerValue={getTimerValue}\r\n              />\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { FC } from 'react';\r\nimport style from './results.module.scss';\r\nimport { timeConvertor } from '../../helpers/helperFunctions/helperFunctions';\r\nimport type { typeResults } from '../../helpers/types/types';\r\n\r\nconst Results: FC<typeResults> = ({ showResults, results }) => {\r\n  results.sort((a, b) => a.time - b.time).splice(10);\r\n\r\n  return (\r\n    <div className={`${style.results} ${showResults && style.active}`}>\r\n      <h5 className={style.heading}>Results</h5>\r\n      <table className={style.table}>\r\n        <thead>\r\n          <tr className={style.tableTh}>\r\n            <th>#</th>\r\n            <th>name</th>\r\n            <th>time</th>\r\n            <th>grid size</th>\r\n            <th>difficulty</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {results.map(({ id, name, time, size, difficulty }, index) => (\r\n            <tr key={id} className={style.tableTr}>\r\n              <td>{index + 1}</td>\r\n              <td>{name.substring(0, 12)}</td>\r\n              <td>{timeConvertor(time)}</td>\r\n              <td>{size}</td>\r\n              <td>{difficulty}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Results;\r\n","import React from 'react';\r\nimport style from './gameOver.module.scss';\r\n\r\nconst GameOver = () => {\r\n  return (\r\n    <div className={style.gameOver}>\r\n      <span className={style.gameOverText}>better luck next time</span>\r\n      <span className={style.gameOverGG}> GG</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameOver;\r\n","import React, { FC, useEffect, useRef } from 'react';\r\nimport style from './winner.module.scss';\r\nimport type { typeWinner } from '../../helpers/types/types';\r\n\r\n\r\nconst Winner: FC<typeWinner> = ({ winnerName, handleWinnerName, handleWinner }) => {\r\n  const inputEl = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // @ts-ignore\r\n    inputEl.current.focus();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={style.Winner}>\r\n      <h1 className={style.heading}> Winner!!!</h1>\r\n      <label htmlFor=\"input\" className={style.label}>\r\n        enter your name to save results\r\n        <div className={style.inputWrapper}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"enter name...\"\r\n            className={style.input}\r\n            ref={inputEl}\r\n            value={winnerName}\r\n            onChange={(e) => handleWinnerName(e)}\r\n          />\r\n          <button type=\"button\" className={style.button} onClick={handleWinner}>\r\n            save\r\n          </button>\r\n        </div>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Winner;\r\n","import React, { FC } from 'react';\r\nimport style from './restart.module.scss';\r\nimport type { typeRestart } from '../../helpers/types/types';\r\n\r\nconst Restart: FC<typeRestart> = ({ handleRestart }) => {\r\n  return (\r\n    <div className={style.triangleWrapper}>\r\n      <span className={style.triangle}>\r\n        <button type=\"button\" onClick={handleRestart} className={style.button}>\r\n          restart\r\n        </button>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Restart;\r\n","export type GameSize = {\r\n  name: string;\r\n  size: number;\r\n};\r\nexport type GameDifficulty = {\r\n  name: string;\r\n  difficulty: number;\r\n};\r\n\r\nexport const GAME_SIZE: GameSize[] = [\r\n  { name: ' small', size: 10 },\r\n  { name: 'medium', size: 15 },\r\n  { name: 'large', size: 20 },\r\n];\r\n\r\nexport const GAME_DIFICULTY: GameDifficulty[] = [\r\n  { name: 'easy', difficulty: 10 },\r\n  { name: 'medium', difficulty: 3 },\r\n  { name: 'hard', difficulty: 2 },\r\n];\r\n","/* eslint-disable consistent-return */\r\n/* eslint-disable max-len */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { cloneDeep, round } from 'lodash';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport OneCell from '../oneCell/oneCell';\r\nimport Header from '../header/header';\r\nimport Results from '../results/results';\r\nimport GameOver from '../gameOver/gameOver';\r\nimport Winner from '../winner/winner';\r\nimport Restart from '../restart/restart';\r\nimport { GAME_SIZE, GAME_DIFICULTY } from '../../helpers/optionArrays/optionArrays';\r\nimport type { typeResultObj } from '../../helpers/types/types';\r\n\r\nimport {\r\n  drawBombs,\r\n  drawGrid,\r\n  drawNumbers,\r\n  drawAroundFirstClicked,\r\n  adjacentCellsNoBombs,\r\n  drawGameOver,\r\n  checkWinner,\r\n} from '../../helpers/helperFunctions/helperFunctions';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport style from './minesweeper.module.scss';\r\n\r\nlet isGameStarted = false;\r\nlet isGameOver = false;\r\nlet isWinner = false;\r\nlet isFirstMoveDone = false;\r\nlet isTimerStarted = false;\r\nlet isGridDisabled = false;\r\nlet resetTimer = false;\r\n\r\nconst Minesweeper = () => {\r\n  const [gridSize, setGridSize] = useState(10);\r\n  const [difficulty, setDifficulty] = useState(10);\r\n  const [grid, setGrid] = useState(drawGrid(gridSize));\r\n  const [showResults, setShowResults] = useState(false);\r\n  const [winnerName, setWinnerName] = useState('');\r\n  const [results, setResults] = useState<typeResultObj[]>([]);\r\n  const [timer, setTimer] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const minesweeperStorage = localStorage.getItem('minesweeper');\r\n    minesweeperStorage && setResults(JSON.parse(minesweeperStorage));\r\n  }, []);\r\n\r\n  const handleOpen = (rowI: number, colI: number) => {\r\n    const copyGrid = cloneDeep(grid);\r\n    const cell = { rowI, colI };\r\n\r\n    if (grid[rowI][colI].haveFlag) {\r\n      return;\r\n    }\r\n    if (grid[rowI][colI].cell === 'bomb') {\r\n      const gameOverGrid = drawGameOver(gridSize, copyGrid);\r\n      isGameOver = true;\r\n      isGridDisabled = true;\r\n      isTimerStarted = false;\r\n      setGrid(gameOverGrid);\r\n      return;\r\n    }\r\n    if (!isFirstMoveDone) {\r\n      const BOMB_COUNT = round(gridSize / difficulty);\r\n      const gridWithBombs = drawBombs(cell, BOMB_COUNT, copyGrid);\r\n      const gridEmtptyFirst = drawAroundFirstClicked(cell, gridSize, gridWithBombs);\r\n      const gridWithNumber = drawNumbers(gridSize, gridEmtptyFirst);\r\n      const gridAdjacent = adjacentCellsNoBombs(cell, gridSize, gridWithNumber);\r\n      isTimerStarted = true;\r\n      resetTimer = false;\r\n      setGrid(gridAdjacent);\r\n      isFirstMoveDone = true;\r\n    } else {\r\n      const gridAdjacent = adjacentCellsNoBombs(cell, gridSize, copyGrid);\r\n      gridAdjacent[rowI][colI].isOpen = true;\r\n      if (checkWinner(gridAdjacent)) {\r\n        isTimerStarted = false;\r\n        isWinner = true;\r\n      }\r\n      setGrid(gridAdjacent);\r\n    }\r\n  };\r\n  const hadleRightClick = (\r\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\r\n    index1: number,\r\n    index2: number\r\n  ) => {\r\n    e.preventDefault();\r\n    const copyGrid = cloneDeep(grid);\r\n    copyGrid[index1][index2].haveFlag = !copyGrid[index1][index2].haveFlag;\r\n    setGrid(copyGrid);\r\n  };\r\n\r\n  const handleStart = () => {\r\n    const copyGrid = drawGrid(gridSize);\r\n    setGrid(copyGrid);\r\n    isGameStarted = !isGameStarted;\r\n    isFirstMoveDone = false;\r\n    isGameOver = false;\r\n    isGridDisabled = false;\r\n    isWinner = false;\r\n    isTimerStarted = false;\r\n    resetTimer = true;\r\n    setTimer(0);\r\n  };\r\n  const handleRestart = () => {\r\n    const copyGrid = drawGrid(gridSize);\r\n    setGrid(copyGrid);\r\n    isFirstMoveDone = false;\r\n    isGameOver = false;\r\n    isGridDisabled = false;\r\n    isWinner = false;\r\n    isTimerStarted = false;\r\n    resetTimer = true;\r\n    setTimer(0);\r\n  };\r\n  const handleWinner = () => {\r\n    if (!winnerName) {\r\n      alert('enter name!');\r\n    } else {\r\n      const copyResults = [...results];\r\n      const findSizeIndex = GAME_SIZE.findIndex((item) => item.size === gridSize);\r\n      const findDiffIndex = GAME_DIFICULTY.findIndex((item) => item.difficulty === difficulty);\r\n\r\n      const newWinner: typeResultObj = {\r\n        id: uuidv4(),\r\n        name: winnerName,\r\n        time: timer,\r\n        size: GAME_SIZE[findSizeIndex].name,\r\n        difficulty: GAME_DIFICULTY[findDiffIndex].name,\r\n      };\r\n\r\n      isWinner = false;\r\n      isGameStarted = false;\r\n      localStorage.setItem('minesweeper', JSON.stringify([...copyResults, newWinner]));\r\n      setResults([...copyResults, newWinner]);\r\n      setWinnerName('');\r\n      setTimer(0);\r\n      toast('Result Added!', {\r\n        position: 'top-left',\r\n        autoClose: 3000,\r\n        closeOnClick: true,\r\n        draggable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"conatainer\">\r\n      <div className=\"row\">\r\n        <div className=\"col-xs-12\">\r\n          <Header\r\n            isGameStarted={isGameStarted}\r\n            isTimerStarted={isTimerStarted}\r\n            resetTimer={resetTimer}\r\n            showResults={showResults}\r\n            gameSizeArr={GAME_SIZE}\r\n            gameDifficultyArr={GAME_DIFICULTY}\r\n            gameSize={gridSize}\r\n            gameDifficulty={difficulty}\r\n            handleStart={() => handleStart()}\r\n            handleShowResults={() => setShowResults(!showResults)}\r\n            handleGridSizeChange={(e) => setGridSize(parseInt(e.target.value, 10))}\r\n            handleDifficultyChange={(e) => setDifficulty(parseInt(e.target.value, 10))}\r\n            getTimerValue={(time: number) => {\r\n              setTimer(time);\r\n            }}\r\n          />\r\n          <Results showResults={showResults} results={results} />\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-xs-12\">\r\n          {isGameStarted && (\r\n            <div\r\n              className={style.minesweeper}\r\n              style={{\r\n                maxWidth: `${gridSize * 30}px`,\r\n              }}\r\n            >\r\n              {grid.map((RowArr, rowI) =>\r\n                RowArr.map((oneCell, colI) => (\r\n                  <OneCell\r\n                    key={oneCell.id}\r\n                    oneCell={oneCell}\r\n                    hadleRightClick={(e) => hadleRightClick(e, rowI, colI)}\r\n                    handleOpen={() => handleOpen(rowI, colI)}\r\n                    isGridDisabled={isGridDisabled}\r\n                    gridSize={gridSize}\r\n                  />\r\n                ))\r\n              )}\r\n              {isFirstMoveDone && <Restart handleRestart={() => handleRestart()} />}\r\n              {isGameOver && <GameOver />}\r\n              {isWinner && (\r\n                <Winner\r\n                  winnerName={winnerName}\r\n                  handleWinnerName={(e) => setWinnerName(e.target.value)}\r\n                  handleWinner={() => handleWinner()}\r\n                />\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Minesweeper;\r\n","import React from 'react';\nimport 'flexboxgrid';\nimport Minesweeper from './components/minesweeper/minesweeper';\n\nconst App = () => {\n  return (\n    <div>\n      <div className=\"container\">\n        <Minesweeper />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport 'flexboxgrid';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}